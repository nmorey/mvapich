/*D
   MPI_Reduce_scatter_init - Create a persistent request for reduce_scatter.

Synopsis:
.vb
int MPI_Reduce_scatter_init(const void *sendbuf, void *recvbuf,
                            const int recvcounts[], MPI_Datatype datatype,
                            MPI_Op op, MPI_Comm comm, MPI_Info info,
                            MPI_Request *request)
.ve
.vb
int MPI_Reduce_scatter_init_c(const void *sendbuf, void *recvbuf,
                              const MPI_Count recvcounts[],
                              MPI_Datatype datatype, MPI_Op op, MPI_Comm comm,
                              MPI_Info info, MPI_Request *request)
.ve

Input Parameters:
+ sendbuf - starting address of send buffer (choice)
. recvcounts - non-negative integer array specifying the number of elements in result distributed to each process. This array must be identical on all calling processes. (non-negative integer)
. datatype - data type of elements of input buffer (handle)
. op - operation (handle)
. comm - communicator (handle)
- info - info argument (handle)

Output Parameters:
+ recvbuf - starting address of receive buffer (choice)
- request - communication request (handle)

.N ThreadSafe

.N Fortran

.N Errors
.N MPI_SUCCESS
.N MPI_ERR_ARG
.N MPI_ERR_BUFFER
.N MPI_ERR_COMM
.N MPI_ERR_COUNT
.N MPI_ERR_INFO
.N MPI_ERR_OP
.N MPI_ERR_TYPE
.N MPI_ERR_OTHER

D*/

