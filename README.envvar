Copyright (C) by Argonne National Laboratory
    See COPYRIGHT in top-level directory

Automatically generated
  by:   ./maint/extractcvars
  at:   Thu Mar  6 22:01:57 2025 UTC
DO NOT EDIT!!!

This file lists the various environment variables available to change the
behavior of the MPICH library.  These are intended to be used by advanced
users.
---------------------------------------------------------------------------

MPIR_CVAR_BARRIER_INTRA_ALGORITHM
    Aliases: MVP_BARRIER_INTRA_ALGORITHM
             MPICH_BARRIER_INTRA_ALGORITHM
    Description: Variable to select barrier algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb            - Force nonblocking algorithm
        smp           - Force smp algorithm
        k_dissemination - Force high radix dissemination algorithm
        recexch       - Force recursive exchange algorithm
        osu_pairwise  - Force OSU mcast based design
    Default: MPIR_CVAR_BARRIER_INTRA_ALGORITHM_auto

MPIR_CVAR_BARRIER_INTER_ALGORITHM
    Aliases: MVP_BARRIER_INTER_ALGORITHM
             MPICH_BARRIER_INTER_ALGORITHM
    Description: Variable to select barrier algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        bcast - Force bcast algorithm
        nb    - Force nonblocking algorithm
    Default: MPIR_CVAR_BARRIER_INTER_ALGORITHM_auto

MPIR_CVAR_BARRIER_DISSEM_KVAL
    Aliases: MVP_BARRIER_DISSEM_KVAL
             MPICH_BARRIER_DISSEM_KVAL
    Description: k value for dissemination exchange based barrier algorithm
    Default: 2

MPIR_CVAR_BARRIER_RECEXCH_KVAL
    Aliases: MVP_BARRIER_RECEXCH_KVAL
             MPICH_BARRIER_RECEXCH_KVAL
    Description: k value for recursive exchange based allreduce based
        barrier
    Default: 2

MPIR_CVAR_BARRIER_RECEXCH_SINGLE_PHASE_RECV
    Aliases: MVP_BARRIER_RECEXCH_SINGLE_PHASE_RECV
             MPICH_BARRIER_RECEXCH_SINGLE_PHASE_RECV
    Description: This CVAR controls whether the recv is posted for one
        phase or two phases in recexch algos. By default, we post the recvs
        for 2 phases.
    Default: 0

MPIR_CVAR_IBARRIER_RECEXCH_KVAL
    Aliases: MVP_IBARRIER_RECEXCH_KVAL
             MPICH_IBARRIER_RECEXCH_KVAL
    Description: k value for recursive exchange based ibarrier
    Default: 2

MPIR_CVAR_IBARRIER_DISSEM_KVAL
    Aliases: MVP_IBARRIER_DISSEM_KVAL
             MPICH_IBARRIER_DISSEM_KVAL
    Description: k value for dissemination exchange based ibarrier
    Default: 2

MPIR_CVAR_IBARRIER_INTRA_ALGORITHM
    Aliases: MVP_IBARRIER_INTRA_ALGORITHM
             MPICH_IBARRIER_INTRA_ALGORITHM
    Description: Variable to select ibarrier algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_recursive_doubling - Force recursive doubling algorithm
        tsp_recexch - Force generic transport based recursive exchange
        algorithm
        tsp_k_dissemination - Force generic transport based high-radix
        dissemination algorithm
    Default: MPIR_CVAR_IBARRIER_INTRA_ALGORITHM_auto

MPIR_CVAR_IBARRIER_INTER_ALGORITHM
    Aliases: MVP_IBARRIER_INTER_ALGORITHM
             MPICH_IBARRIER_INTER_ALGORITHM
    Description: Variable to select ibarrier algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_bcast - Force bcast algorithm
    Default: MPIR_CVAR_IBARRIER_INTER_ALGORITHM_auto

MPIR_CVAR_BCAST_MIN_PROCS
    Aliases: MVP_BCAST_MIN_PROCS
             MPICH_BCAST_MIN_PROCS
    Description: Let's define short messages as messages with size <
        MPIR_CVAR_BCAST_SHORT_MSG_SIZE, and medium messages as messages
        with size >= MPIR_CVAR_BCAST_SHORT_MSG_SIZE but <
        MPIR_CVAR_BCAST_LONG_MSG_SIZE, and long messages as messages with
        size >= MPIR_CVAR_BCAST_LONG_MSG_SIZE. The broadcast algorithms
        selection procedure is as follows. For short messages or when the
        number of processes is < MPIR_CVAR_BCAST_MIN_PROCS, we do broadcast
        using the binomial tree algorithm. Otherwise, for medium messages
        and with a power-of-two number of processes, we do broadcast based
        on a scatter followed by a recursive doubling allgather algorithm.
        Otherwise, for long messages or with non power-of-two number of
        processes, we do broadcast based on a scatter followed by a ring
        allgather algorithm. (See also: MPIR_CVAR_BCAST_SHORT_MSG_SIZE,
        MPIR_CVAR_BCAST_LONG_MSG_SIZE)
    Default: 8

MPIR_CVAR_BCAST_SHORT_MSG_SIZE
    Aliases: MVP_BCAST_SHORT_MSG_SIZE
             MPICH_BCAST_SHORT_MSG_SIZE
    Description: Let's define short messages as messages with size <
        MPIR_CVAR_BCAST_SHORT_MSG_SIZE, and medium messages as messages
        with size >= MPIR_CVAR_BCAST_SHORT_MSG_SIZE but <
        MPIR_CVAR_BCAST_LONG_MSG_SIZE, and long messages as messages with
        size >= MPIR_CVAR_BCAST_LONG_MSG_SIZE. The broadcast algorithms
        selection procedure is as follows. For short messages or when the
        number of processes is < MPIR_CVAR_BCAST_MIN_PROCS, we do broadcast
        using the binomial tree algorithm. Otherwise, for medium messages
        and with a power-of-two number of processes, we do broadcast based
        on a scatter followed by a recursive doubling allgather algorithm.
        Otherwise, for long messages or with non power-of-two number of
        processes, we do broadcast based on a scatter followed by a ring
        allgather algorithm. (See also: MPIR_CVAR_BCAST_MIN_PROCS,
        MPIR_CVAR_BCAST_LONG_MSG_SIZE)
    Default: 12288

MPIR_CVAR_BCAST_LONG_MSG_SIZE
    Aliases: MVP_BCAST_LONG_MSG_SIZE
             MPICH_BCAST_LONG_MSG_SIZE
    Description: Let's define short messages as messages with size <
        MPIR_CVAR_BCAST_SHORT_MSG_SIZE, and medium messages as messages
        with size >= MPIR_CVAR_BCAST_SHORT_MSG_SIZE but <
        MPIR_CVAR_BCAST_LONG_MSG_SIZE, and long messages as messages with
        size >= MPIR_CVAR_BCAST_LONG_MSG_SIZE. The broadcast algorithms
        selection procedure is as follows. For short messages or when the
        number of processes is < MPIR_CVAR_BCAST_MIN_PROCS, we do broadcast
        using the binomial tree algorithm. Otherwise, for medium messages
        and with a power-of-two number of processes, we do broadcast based
        on a scatter followed by a recursive doubling allgather algorithm.
        Otherwise, for long messages or with non power-of-two number of
        processes, we do broadcast based on a scatter followed by a ring
        allgather algorithm. (See also: MPIR_CVAR_BCAST_MIN_PROCS,
        MPIR_CVAR_BCAST_SHORT_MSG_SIZE)
    Default: 524288

MPIR_CVAR_MAX_SMP_BCAST_MSG_SIZE
    Aliases: MVP_MAX_SMP_BCAST_MSG_SIZE
             MPICH_MAX_SMP_BCAST_MSG_SIZE
    Description: Maximum message size for which SMP-aware broadcast is
        used.  A value of '0' uses SMP-aware broadcast for all message
        sizes.
    Default: 0

MPIR_CVAR_BCAST_INTRA_ALGORITHM
    Aliases: MVP_BCAST_INTRA_ALGORITHM
             MPICH_BCAST_INTRA_ALGORITHM
    Description: Variable to select bcast algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        binomial                                - Force Binomial Tree
        nb                                      - Force nonblocking
        algorithm
        smp                                     - Force smp algorithm
        scatter_recursive_doubling_allgather    - Force Scatter
        Recursive-Doubling Allgather
        scatter_ring_allgather                  - Force Scatter Ring
        pipelined_tree                          - Force tree-based
        pipelined algorithm
        tree                                    - Force tree-based
        algorithm
        osu_knomial                             - Force OSU knomial
        algorithm
        osu_pairwise                            - Force OSU pairwise
        algorithm
        osu_pipelined                           - Force OSU pipelined
        algorithm
    Default: MPIR_CVAR_BCAST_INTRA_ALGORITHM_auto

MPIR_CVAR_BCAST_TREE_KVAL
    Aliases: MVP_BCAST_TREE_KVAL
             MPICH_BCAST_TREE_KVAL
    Description: k value for tree (kary, knomial, etc.) based bcast
    Default: 2

MPIR_CVAR_BCAST_TREE_TYPE
    Aliases: MVP_BCAST_TREE_TYPE
             MPICH_BCAST_TREE_TYPE
    Description: Tree type for tree based bcast kary      - kary tree type
        knomial_1 - knomial_1 tree type knomial_2 - knomial_2 tree type
        topology_aware - topology_aware tree type topology_aware_k -
        topology_aware tree type with branching factor k topology_wave -
        topology_wave tree type
    Default: "kary"

MPIR_CVAR_BCAST_TOPO_REORDER_ENABLE
    Aliases: MVP_BCAST_TOPO_REORDER_ENABLE
             MPICH_BCAST_TOPO_REORDER_ENABLE
    Description: This cvar controls if the leaders are reordered based on
        the number of ranks in each group.
    Default: 1

MPIR_CVAR_BCAST_TOPO_OVERHEAD
    Aliases: MVP_BCAST_TOPO_OVERHEAD
             MPICH_BCAST_TOPO_OVERHEAD
    Description: This cvar controls the size of the overhead.
    Default: 200

MPIR_CVAR_BCAST_TOPO_DIFF_GROUPS
    Aliases: MVP_BCAST_TOPO_DIFF_GROUPS
             MPICH_BCAST_TOPO_DIFF_GROUPS
    Description: This cvar controls the latency between different groups.
    Default: 2800

MPIR_CVAR_BCAST_TOPO_DIFF_SWITCHES
    Aliases: MVP_BCAST_TOPO_DIFF_SWITCHES
             MPICH_BCAST_TOPO_DIFF_SWITCHES
    Description: This cvar controls the latency between different switches
        in the same groups.
    Default: 1900

MPIR_CVAR_BCAST_TOPO_SAME_SWITCHES
    Aliases: MVP_BCAST_TOPO_SAME_SWITCHES
             MPICH_BCAST_TOPO_SAME_SWITCHES
    Description: This cvar controls the latency in the same switch.
    Default: 1600

MPIR_CVAR_BCAST_IS_NON_BLOCKING
    Aliases: MVP_BCAST_IS_NON_BLOCKING
             MPICH_BCAST_IS_NON_BLOCKING
    Description: If set to true, MPI_Bcast will use non-blocking send.
    Default: 1

MPIR_CVAR_BCAST_TREE_PIPELINE_CHUNK_SIZE
    Aliases: MVP_BCAST_TREE_PIPELINE_CHUNK_SIZE
             MPICH_BCAST_TREE_PIPELINE_CHUNK_SIZE
    Description: Indicates the chunk size for pipelined bcast.
    Default: 8192

MPIR_CVAR_BCAST_RECV_PRE_POST
    Aliases: MVP_BCAST_RECV_PRE_POST
             MPICH_BCAST_RECV_PRE_POST
    Description: If set to true, MPI_Bcast will pre-post all the receives.
    Default: 0

MPIR_CVAR_BCAST_INTER_ALGORITHM
    Aliases: MVP_BCAST_INTER_ALGORITHM
             MPICH_BCAST_INTER_ALGORITHM
    Description: Variable to select bcast algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb                      - Force nonblocking algorithm
        remote_send_local_bcast - Force remote-send-local-bcast algorithm
    Default: MPIR_CVAR_BCAST_INTER_ALGORITHM_auto

MPIR_CVAR_IBCAST_TREE_KVAL
    Aliases: MVP_IBCAST_TREE_KVAL
             MPICH_IBCAST_TREE_KVAL
    Description: k value for tree (kary, knomial, etc.) based ibcast
    Default: 2

MPIR_CVAR_IBCAST_TREE_TYPE
    Aliases: MVP_IBCAST_TREE_TYPE
             MPICH_IBCAST_TREE_TYPE
    Description: Tree type for tree based ibcast kary      - kary tree type
        knomial_1 - knomial_1 tree type knomial_2 - knomial_2 tree type
    Default: "kary"

MPIR_CVAR_IBCAST_TREE_PIPELINE_CHUNK_SIZE
    Aliases: MVP_IBCAST_TREE_PIPELINE_CHUNK_SIZE
             MPICH_IBCAST_TREE_PIPELINE_CHUNK_SIZE
    Description: Maximum chunk size (in bytes) for pipelining in tree based
        ibcast. Default value is 0, that is, no pipelining by default
    Default: 0

MPIR_CVAR_IBCAST_RING_CHUNK_SIZE
    Aliases: MVP_IBCAST_RING_CHUNK_SIZE
             MPICH_IBCAST_RING_CHUNK_SIZE
    Description: Maximum chunk size (in bytes) for pipelining in ibcast
        ring algorithm. Default value is 0, that is, no pipelining by
        default
    Default: 0

MPIR_CVAR_IBCAST_INTRA_ALGORITHM
    Aliases: MVP_IBCAST_INTRA_ALGORITHM
             MPICH_IBCAST_INTRA_ALGORITHM
    Description: Variable to select ibcast algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_binomial                             - Force Binomial
        algorithm
        sched_smp                                  - Force smp algorithm
        sched_scatter_recursive_doubling_allgather - Force Scatter
        Recursive Doubling Allgather algorithm
        sched_scatter_ring_allgather               - Force Scatter Ring
        Allgather algorithm
        tsp_tree                               - Force Generic Transport
        Tree algorithm
        tsp_scatterv_recexch_allgatherv        - Force Generic Transport
        Scatterv followed by Recursive Exchange Allgatherv algorithm
        tsp_scatterv_ring_allgatherv           - Force Generic Transport
        Scatterv followed by Ring Allgatherv algorithm
        tsp_ring                               - Force Generic Transport
        Ring algorithm
    Default: MPIR_CVAR_IBCAST_INTRA_ALGORITHM_auto

MPIR_CVAR_IBCAST_SCATTERV_KVAL
    Aliases: MVP_IBCAST_SCATTERV_KVAL
             MPICH_IBCAST_SCATTERV_KVAL
    Description: k value for tree based scatter in
        scatter_recexch_allgather algorithm
    Default: 2

MPIR_CVAR_IBCAST_ALLGATHERV_RECEXCH_KVAL
    Aliases: MVP_IBCAST_ALLGATHERV_RECEXCH_KVAL
             MPICH_IBCAST_ALLGATHERV_RECEXCH_KVAL
    Description: k value for recursive exchange based allgather in
        scatter_recexch_allgather algorithm
    Default: 2

MPIR_CVAR_IBCAST_INTER_ALGORITHM
    Aliases: MVP_IBCAST_INTER_ALGORITHM
             MPICH_IBCAST_INTER_ALGORITHM
    Description: Variable to select ibcast algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_flat - Force flat algorithm
    Default: MPIR_CVAR_IBCAST_INTER_ALGORITHM_auto

MPIR_CVAR_GATHER_INTER_SHORT_MSG_SIZE
    Aliases: MVP_GATHER_INTER_SHORT_MSG_SIZE
             MPICH_GATHER_INTER_SHORT_MSG_SIZE
    Description: use the short message algorithm for intercommunicator
        MPI_Gather if the send buffer size is < this value (in bytes) (See
        also: MPIR_CVAR_GATHER_VSMALL_MSG_SIZE)
    Default: 2048

MPIR_CVAR_GATHER_INTRA_ALGORITHM
    Aliases: MVP_GATHER_INTRA_ALGORITHM
             MPICH_GATHER_INTRA_ALGORITHM
    Description: Variable to select gather algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        binomial - Force binomial algorithm
        nb       - Force nonblocking algorithm
        osu_direct - Force OSU direct algorithm
        osu_direct_block - Force OSU direct block algorithm
    Default: MPIR_CVAR_GATHER_INTRA_ALGORITHM_auto

MPIR_CVAR_GATHER_INTER_ALGORITHM
    Aliases: MVP_GATHER_INTER_ALGORITHM
             MPICH_GATHER_INTER_ALGORITHM
    Description: Variable to select gather algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        linear                   - Force linear algorithm
        local_gather_remote_send - Force local-gather-remote-send algorithm
        nb                       - Force nonblocking algorithm
    Default: MPIR_CVAR_GATHER_INTER_ALGORITHM_auto

MPIR_CVAR_IGATHER_INTRA_ALGORITHM
    Aliases: MVP_IGATHER_INTRA_ALGORITHM
             MPICH_IGATHER_INTRA_ALGORITHM
    Description: Variable to select igather algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_binomial     - Force binomial algorithm
        tsp_tree       - Force genetric transport based tree algorithm
    Default: MPIR_CVAR_IGATHER_INTRA_ALGORITHM_auto

MPIR_CVAR_IGATHER_TREE_KVAL
    Aliases: MVP_IGATHER_TREE_KVAL
             MPICH_IGATHER_TREE_KVAL
    Description: k value for tree based igather
    Default: 2

MPIR_CVAR_IGATHER_INTER_ALGORITHM
    Aliases: MVP_IGATHER_INTER_ALGORITHM
             MPICH_IGATHER_INTER_ALGORITHM
    Description: Variable to select igather algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_long  - Force long inter algorithm
        sched_short - Force short inter algorithm
    Default: MPIR_CVAR_IGATHER_INTER_ALGORITHM_auto

MPIR_CVAR_GATHERV_INTRA_ALGORITHM
    Aliases: MVP_GATHERV_INTRA_ALGORITHM
             MPICH_GATHERV_INTRA_ALGORITHM
    Description: Variable to select gatherv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        linear - Force linear algorithm
        nb     - Force nonblocking algorithm
    Default: MPIR_CVAR_GATHERV_INTRA_ALGORITHM_auto

MPIR_CVAR_GATHERV_INTER_ALGORITHM
    Aliases: MVP_GATHERV_INTER_ALGORITHM
             MPICH_GATHERV_INTER_ALGORITHM
    Description: Variable to select gatherv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        linear - Force linear algorithm
        nb     - Force nonblocking algorithm
    Default: MPIR_CVAR_GATHERV_INTER_ALGORITHM_auto

MPIR_CVAR_IGATHERV_INTRA_ALGORITHM
    Aliases: MVP_IGATHERV_INTRA_ALGORITHM
             MPICH_IGATHERV_INTRA_ALGORITHM
    Description: Variable to select igatherv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_linear         - Force linear algorithm
        tsp_linear       - Force generic transport based linear algorithm
    Default: MPIR_CVAR_IGATHERV_INTRA_ALGORITHM_auto

MPIR_CVAR_IGATHERV_INTER_ALGORITHM
    Aliases: MVP_IGATHERV_INTER_ALGORITHM
             MPICH_IGATHERV_INTER_ALGORITHM
    Description: Variable to select igatherv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_linear - Force linear algorithm
        tsp_linear - Force generic transport based linear algorithm
    Default: MPIR_CVAR_IGATHERV_INTER_ALGORITHM_auto

MPIR_CVAR_SCATTER_INTER_SHORT_MSG_SIZE
    Aliases: MVP_SCATTER_INTER_SHORT_MSG_SIZE
             MPICH_SCATTER_INTER_SHORT_MSG_SIZE
    Description: use the short message algorithm for intercommunicator
        MPI_Scatter if the send buffer size is < this value (in bytes)
    Default: 2048

MPIR_CVAR_SCATTER_INTRA_ALGORITHM
    Aliases: MVP_SCATTER_INTRA_ALGORITHM
             MPICH_SCATTER_INTRA_ALGORITHM
    Description: Variable to select scatter algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        binomial - Force binomial algorithm
        nb       - Force nonblocking algorithm
        osu_direct - Force OSU direct alogirthm
    Default: MPIR_CVAR_SCATTER_INTRA_ALGORITHM_auto

MPIR_CVAR_SCATTER_INTER_ALGORITHM
    Aliases: MVP_SCATTER_INTER_ALGORITHM
             MPICH_SCATTER_INTER_ALGORITHM
    Description: Variable to select scatter algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        linear                    - Force linear algorithm
        nb                        - Force nonblocking algorithm
        remote_send_local_scatter - Force remote-send-local-scatter
        algorithm
    Default: MPIR_CVAR_SCATTER_INTER_ALGORITHM_auto

MPIR_CVAR_ISCATTER_INTRA_ALGORITHM
    Aliases: MVP_ISCATTER_INTRA_ALGORITHM
             MPICH_ISCATTER_INTRA_ALGORITHM
    Description: Variable to select iscatter algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_binomial     - Force binomial algorithm
        tsp_tree       - Force genetric transport based tree algorithm
    Default: MPIR_CVAR_ISCATTER_INTRA_ALGORITHM_auto

MPIR_CVAR_ISCATTER_TREE_KVAL
    Aliases: MVP_ISCATTER_TREE_KVAL
             MPICH_ISCATTER_TREE_KVAL
    Description: k value for tree based iscatter
    Default: 2

MPIR_CVAR_ISCATTER_INTER_ALGORITHM
    Aliases: MVP_ISCATTER_INTER_ALGORITHM
             MPICH_ISCATTER_INTER_ALGORITHM
    Description: Variable to select iscatter algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_linear                    - Force linear algorithm
        sched_remote_send_local_scatter - Force remote-send-local-scatter
        algorithm
    Default: MPIR_CVAR_ISCATTER_INTER_ALGORITHM_auto

MPIR_CVAR_SCATTERV_INTRA_ALGORITHM
    Aliases: MVP_SCATTERV_INTRA_ALGORITHM
             MPICH_SCATTERV_INTRA_ALGORITHM
    Description: Variable to select scatterv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        linear - Force linear algorithm
        nb     - Force nonblocking algorithm
    Default: MPIR_CVAR_SCATTERV_INTRA_ALGORITHM_auto

MPIR_CVAR_SCATTERV_INTER_ALGORITHM
    Aliases: MVP_SCATTERV_INTER_ALGORITHM
             MPICH_SCATTERV_INTER_ALGORITHM
    Description: Variable to select scatterv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        linear - Force linear algorithm
        nb     - Force nonblocking algorithm
    Default: MPIR_CVAR_SCATTERV_INTER_ALGORITHM_auto

MPIR_CVAR_ISCATTERV_INTRA_ALGORITHM
    Aliases: MVP_ISCATTERV_INTRA_ALGORITHM
             MPICH_ISCATTERV_INTRA_ALGORITHM
    Description: Variable to select iscatterv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_linear    - Force linear algorithm
        tsp_linear  - Force generic transport based linear algorithm
    Default: MPIR_CVAR_ISCATTERV_INTRA_ALGORITHM_auto

MPIR_CVAR_ISCATTERV_INTER_ALGORITHM
    Aliases: MVP_ISCATTERV_INTER_ALGORITHM
             MPICH_ISCATTERV_INTER_ALGORITHM
    Description: Variable to select iscatterv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_linear - Force linear algorithm
        tsp_linear - Force generic transport based linear algorithm
    Default: MPIR_CVAR_ISCATTERV_INTER_ALGORITHM_auto

MPIR_CVAR_ALLGATHER_SHORT_MSG_SIZE
    Aliases: MVP_ALLGATHER_SHORT_MSG_SIZE
             MPICH_ALLGATHER_SHORT_MSG_SIZE
    Description: For MPI_Allgather and MPI_Allgatherv, the short message
        algorithm will be used if the send buffer size is < this value (in
        bytes). (See also: MPIR_CVAR_ALLGATHER_LONG_MSG_SIZE)
    Default: 81920

MPIR_CVAR_ALLGATHER_LONG_MSG_SIZE
    Aliases: MVP_ALLGATHER_LONG_MSG_SIZE
             MPICH_ALLGATHER_LONG_MSG_SIZE
    Description: For MPI_Allgather and MPI_Allgatherv, the long message
        algorithm will be used if the send buffer size is >= this value (in
        bytes) (See also: MPIR_CVAR_ALLGATHER_SHORT_MSG_SIZE)
    Default: 524288

MPIR_CVAR_ALLGATHER_INTRA_ALGORITHM
    Aliases: MVP_ALLGATHER_INTRA_ALGORITHM
             MPICH_ALLGATHER_INTRA_ALGORITHM
    Description: Variable to select allgather algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        brucks             - Force brucks algorithm
        k_brucks           - Force brucks algorithm
        nb                 - Force nonblocking algorithm
        recursive_doubling - Force recursive doubling algorithm
        ring               - Force ring algorithm
        recexch_doubling   - Force recexch distance doubling algorithm
        recexch_halving    - Force recexch distance halving algorithm
        osu_direct         - Force MVAPICH direct algorithm
        osu_direct_spread  - Force MVAPICH direct spread algorithm
        osu_gather_bcast   - Force MVAPICH gather-bcast algorithm
    Default: MPIR_CVAR_ALLGATHER_INTRA_ALGORITHM_auto

MPIR_CVAR_ALLGATHER_BRUCKS_KVAL
    Aliases: MVP_ALLGATHER_BRUCKS_KVAL
             MPICH_ALLGATHER_BRUCKS_KVAL
    Description: radix (k) value for generic transport brucks based
        allgather
    Default: 2

MPIR_CVAR_ALLGATHER_RECEXCH_KVAL
    Aliases: MVP_ALLGATHER_RECEXCH_KVAL
             MPICH_ALLGATHER_RECEXCH_KVAL
    Description: k value for recursive exchange based allgather
    Default: 2

MPIR_CVAR_ALLGATHER_RECEXCH_SINGLE_PHASE_RECV
    Aliases: MVP_ALLGATHER_RECEXCH_SINGLE_PHASE_RECV
             MPICH_ALLGATHER_RECEXCH_SINGLE_PHASE_RECV
    Description: This CVAR controls whether the recv is posted for one
        phase or two phases in recexch algos. By default, we post the recvs
        for 2 phases.
    Default: 0

MPIR_CVAR_ALLGATHER_INTER_ALGORITHM
    Aliases: MVP_ALLGATHER_INTER_ALGORITHM
             MPICH_ALLGATHER_INTER_ALGORITHM
    Description: Variable to select allgather algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        local_gather_remote_bcast - Force local-gather-remote-bcast
        algorithm
        nb                        - Force nonblocking algorithm
    Default: MPIR_CVAR_ALLGATHER_INTER_ALGORITHM_auto

MPIR_CVAR_IALLGATHER_RECEXCH_KVAL
    Aliases: MVP_IALLGATHER_RECEXCH_KVAL
             MPICH_IALLGATHER_RECEXCH_KVAL
    Description: k value for recursive exchange based iallgather
    Default: 2

MPIR_CVAR_IALLGATHER_BRUCKS_KVAL
    Aliases: MVP_IALLGATHER_BRUCKS_KVAL
             MPICH_IALLGATHER_BRUCKS_KVAL
    Description: k value for radix in brucks based iallgather
    Default: 2

MPIR_CVAR_IALLGATHER_INTRA_ALGORITHM
    Aliases: MVP_IALLGATHER_INTRA_ALGORITHM
             MPICH_IALLGATHER_INTRA_ALGORITHM
    Description: Variable to select iallgather algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_ring               - Force ring algorithm
        sched_brucks             - Force brucks algorithm
        sched_recursive_doubling - Force recursive doubling algorithm
        tsp_ring       - Force generic transport ring algorithm
        tsp_brucks     - Force generic transport based brucks algorithm
        tsp_recexch_doubling - Force generic transport recursive exchange
        with neighbours doubling in distance in each phase
        tsp_recexch_halving  - Force generic transport recursive exchange
        with neighbours halving in distance in each phase
    Default: MPIR_CVAR_IALLGATHER_INTRA_ALGORITHM_auto

MPIR_CVAR_IALLGATHER_INTER_ALGORITHM
    Aliases: MVP_IALLGATHER_INTER_ALGORITHM
             MPICH_IALLGATHER_INTER_ALGORITHM
    Description: Variable to select iallgather algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_local_gather_remote_bcast - Force local-gather-remote-bcast
        algorithm
    Default: MPIR_CVAR_IALLGATHER_INTER_ALGORITHM_auto

MPIR_CVAR_ALLGATHERV_PIPELINE_MSG_SIZE
    Aliases: MVP_ALLGATHERV_PIPELINE_MSG_SIZE
             MPICH_ALLGATHERV_PIPELINE_MSG_SIZE
    Description: The smallest message size that will be used for the
        pipelined, large-message, ring algorithm in the MPI_Allgatherv
        implementation.
    Default: 32768

MPIR_CVAR_ALLGATHERV_INTRA_ALGORITHM
    Aliases: MVP_ALLGATHERV_INTRA_ALGORITHM
             MPICH_ALLGATHERV_INTRA_ALGORITHM
    Description: Variable to select allgatherv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        brucks             - Force brucks algorithm
        nb                 - Force nonblocking algorithm
        recursive_doubling - Force recursive doubling algorithm
        ring               - Force ring algorithm
    Default: MPIR_CVAR_ALLGATHERV_INTRA_ALGORITHM_auto

MPIR_CVAR_ALLGATHERV_INTER_ALGORITHM
    Aliases: MVP_ALLGATHERV_INTER_ALGORITHM
             MPICH_ALLGATHERV_INTER_ALGORITHM
    Description: Variable to select allgatherv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb                        - Force nonblocking algorithm
        remote_gather_local_bcast - Force remote-gather-local-bcast
        algorithm
    Default: MPIR_CVAR_ALLGATHERV_INTER_ALGORITHM_auto

MPIR_CVAR_IALLGATHERV_RECEXCH_KVAL
    Aliases: MVP_IALLGATHERV_RECEXCH_KVAL
             MPICH_IALLGATHERV_RECEXCH_KVAL
    Description: k value for recursive exchange based iallgatherv
    Default: 2

MPIR_CVAR_IALLGATHERV_BRUCKS_KVAL
    Aliases: MVP_IALLGATHERV_BRUCKS_KVAL
             MPICH_IALLGATHERV_BRUCKS_KVAL
    Description: k value for radix in brucks based iallgatherv
    Default: 2

MPIR_CVAR_IALLGATHERV_INTRA_ALGORITHM
    Aliases: MVP_IALLGATHERV_INTRA_ALGORITHM
             MPICH_IALLGATHERV_INTRA_ALGORITHM
    Description: Variable to select iallgatherv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_brucks             - Force brucks algorithm
        sched_recursive_doubling - Force recursive doubling algorithm
        sched_ring               - Force ring algorithm
        tsp_recexch_doubling - Force generic transport recursive exchange
        with neighbours doubling in distance in each phase
        tsp_recexch_halving  - Force generic transport recursive exchange
        with neighbours halving in distance in each phase
        tsp_ring             - Force generic transport ring algorithm
        tsp_brucks           - Force generic transport based brucks
        algorithm
    Default: MPIR_CVAR_IALLGATHERV_INTRA_ALGORITHM_auto

MPIR_CVAR_IALLGATHERV_INTER_ALGORITHM
    Aliases: MVP_IALLGATHERV_INTER_ALGORITHM
             MPICH_IALLGATHERV_INTER_ALGORITHM
    Description: Variable to select iallgatherv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_remote_gather_local_bcast - Force remote-gather-local-bcast
        algorithm
    Default: MPIR_CVAR_IALLGATHERV_INTER_ALGORITHM_auto

MPIR_CVAR_ALLTOALL_SHORT_MSG_SIZE
    Aliases: MVP_ALLTOALL_SHORT_MSG_SIZE
             MPICH_ALLTOALL_SHORT_MSG_SIZE
    Description: the short message algorithm will be used if the
        per-destination message size (sendcount*size(sendtype)) is <= this
        value (See also: MPIR_CVAR_ALLTOALL_MEDIUM_MSG_SIZE)
    Default: 256

MPIR_CVAR_ALLTOALL_MEDIUM_MSG_SIZE
    Aliases: MVP_ALLTOALL_MEDIUM_MSG_SIZE
             MPICH_ALLTOALL_MEDIUM_MSG_SIZE
    Description: the medium message algorithm will be used if the
        per-destination message size (sendcount*size(sendtype)) is <= this
        value and larger than MPIR_CVAR_ALLTOALL_SHORT_MSG_SIZE (See also:
        MPIR_CVAR_ALLTOALL_SHORT_MSG_SIZE)
    Default: 32768

MPIR_CVAR_ALLTOALL_THROTTLE
    Aliases: MVP_ALLTOALL_THROTTLE
             MPICH_ALLTOALL_THROTTLE
    Description: max no. of irecvs/isends posted at a time in some alltoall
        algorithms. Setting it to 0 causes all irecvs/isends to be posted
        at once
    Default: 32

MPIR_CVAR_ALLTOALL_INTRA_ALGORITHM
    Aliases: MVP_ALLTOALL_INTRA_ALGORITHM
             MPICH_ALLTOALL_INTRA_ALGORITHM
    Description: Variable to select alltoall algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        brucks                    - Force brucks algorithm
        k_brucks                  - Force Force radix k brucks algorithm
        nb                        - Force nonblocking algorithm
        pairwise                  - Force pairwise algorithm
        pairwise_sendrecv_replace - Force pairwise sendrecv replace
        algorithm
        scattered                 - Force scattered algorithm
    Default: MPIR_CVAR_ALLTOALL_INTRA_ALGORITHM_auto

MPIR_CVAR_ALLTOALL_BRUCKS_KVAL
    Aliases: MVP_ALLTOALL_BRUCKS_KVAL
             MPICH_ALLTOALL_BRUCKS_KVAL
    Description: radix (k) value for generic transport brucks based
        alltoall
    Default: 2

MPIR_CVAR_ALLTOALL_INTER_ALGORITHM
    Aliases: MVP_ALLTOALL_INTER_ALGORITHM
             MPICH_ALLTOALL_INTER_ALGORITHM
    Description: Variable to select alltoall algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb                - Force nonblocking algorithm
        pairwise_exchange - Force pairwise exchange algorithm
    Default: MPIR_CVAR_ALLTOALL_INTER_ALGORITHM_auto

MPIR_CVAR_IALLTOALL_INTRA_ALGORITHM
    Aliases: MVP_IALLTOALL_INTRA_ALGORITHM
             MPICH_IALLTOALL_INTRA_ALGORITHM
    Description: Variable to select ialltoall algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_brucks            - Force brucks algorithm
        sched_inplace           - Force inplace algorithm
        sched_pairwise          - Force pairwise algorithm
        sched_permuted_sendrecv - Force permuted sendrecv algorithm
        tsp_ring            - Force generic transport based ring algorithm
        tsp_brucks          - Force generic transport based brucks
        algorithm
        tsp_scattered       - Force generic transport based scattered
        algorithm
    Default: MPIR_CVAR_IALLTOALL_INTRA_ALGORITHM_auto

MPIR_CVAR_IALLTOALL_INTER_ALGORITHM
    Aliases: MVP_IALLTOALL_INTER_ALGORITHM
             MPICH_IALLTOALL_INTER_ALGORITHM
    Description: Variable to select ialltoall algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_pairwise_exchange - Force pairwise exchange algorithm
    Default: MPIR_CVAR_IALLTOALL_INTER_ALGORITHM_auto

MPIR_CVAR_ALLTOALLV_INTRA_ALGORITHM
    Aliases: MVP_ALLTOALLV_INTRA_ALGORITHM
             MPICH_ALLTOALLV_INTRA_ALGORITHM
    Description: Variable to select alltoallv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb                        - Force nonblocking algorithm
        pairwise_sendrecv_replace - Force pairwise_sendrecv_replace
        algorithm
        scattered                 - Force scattered algorithm
    Default: MPIR_CVAR_ALLTOALLV_INTRA_ALGORITHM_auto

MPIR_CVAR_ALLTOALLV_INTER_ALGORITHM
    Aliases: MVP_ALLTOALLV_INTER_ALGORITHM
             MPICH_ALLTOALLV_INTER_ALGORITHM
    Description: Variable to select alltoallv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        pairwise_exchange - Force pairwise exchange algorithm
        nb                - Force nonblocking algorithm
    Default: MPIR_CVAR_ALLTOALLV_INTER_ALGORITHM_auto

MPIR_CVAR_IALLTOALLV_INTRA_ALGORITHM
    Aliases: MVP_IALLTOALLV_INTRA_ALGORITHM
             MPICH_IALLTOALLV_INTRA_ALGORITHM
    Description: Variable to select ialltoallv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_blocked           - Force blocked algorithm
        sched_inplace           - Force inplace algorithm
        tsp_scattered       - Force generic transport based scattered
        algorithm
        tsp_blocked         - Force generic transport blocked algorithm
        tsp_inplace         - Force generic transport inplace algorithm
    Default: MPIR_CVAR_IALLTOALLV_INTRA_ALGORITHM_auto

MPIR_CVAR_IALLTOALLV_INTER_ALGORITHM
    Aliases: MVP_IALLTOALLV_INTER_ALGORITHM
             MPICH_IALLTOALLV_INTER_ALGORITHM
    Description: Variable to select ialltoallv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_pairwise_exchange - Force pairwise exchange algorithm
    Default: MPIR_CVAR_IALLTOALLV_INTER_ALGORITHM_auto

MPIR_CVAR_IALLTOALLV_SCATTERED_OUTSTANDING_TASKS
    Aliases: MVP_IALLTOALLV_SCATTERED_OUTSTANDING_TASKS
             MPICH_IALLTOALLV_SCATTERED_OUTSTANDING_TASKS
    Description: Maximum number of outstanding sends and recvs posted at a
        time
    Default: 64

MPIR_CVAR_IALLTOALLV_SCATTERED_BATCH_SIZE
    Aliases: MVP_IALLTOALLV_SCATTERED_BATCH_SIZE
             MPICH_IALLTOALLV_SCATTERED_BATCH_SIZE
    Description: Number of send/receive tasks that scattered algorithm
        waits for completion before posting another batch of send/receives
        of that size
    Default: 4

MPIR_CVAR_ALLTOALLW_INTRA_ALGORITHM
    Aliases: MVP_ALLTOALLW_INTRA_ALGORITHM
             MPICH_ALLTOALLW_INTRA_ALGORITHM
    Description: Variable to select alltoallw algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb                        - Force nonblocking algorithm
        pairwise_sendrecv_replace - Force pairwise sendrecv replace
        algorithm
        scattered                 - Force scattered algorithm
    Default: MPIR_CVAR_ALLTOALLW_INTRA_ALGORITHM_auto

MPIR_CVAR_ALLTOALLW_INTER_ALGORITHM
    Aliases: MVP_ALLTOALLW_INTER_ALGORITHM
             MPICH_ALLTOALLW_INTER_ALGORITHM
    Description: Variable to select alltoallw algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb                - Force nonblocking algorithm
        pairwise_exchange - Force pairwise exchange algorithm
    Default: MPIR_CVAR_ALLTOALLW_INTER_ALGORITHM_auto

MPIR_CVAR_IALLTOALLW_INTRA_ALGORITHM
    Aliases: MVP_IALLTOALLW_INTRA_ALGORITHM
             MPICH_IALLTOALLW_INTRA_ALGORITHM
    Description: Variable to select ialltoallw algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_blocked           - Force blocked algorithm
        sched_inplace           - Force inplace algorithm
        tsp_blocked   - Force generic transport based blocked algorithm
        tsp_inplace   - Force generic transport based inplace algorithm
    Default: MPIR_CVAR_IALLTOALLW_INTRA_ALGORITHM_auto

MPIR_CVAR_IALLTOALLW_INTER_ALGORITHM
    Aliases: MVP_IALLTOALLW_INTER_ALGORITHM
             MPICH_IALLTOALLW_INTER_ALGORITHM
    Description: Variable to select ialltoallw algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_pairwise_exchange - Force pairwise exchange algorithm
    Default: MPIR_CVAR_IALLTOALLW_INTER_ALGORITHM_auto

MPIR_CVAR_REDUCE_SHORT_MSG_SIZE
    Aliases: MVP_REDUCE_SHORT_MSG_SIZE
             MPICH_REDUCE_SHORT_MSG_SIZE
    Description: the short message algorithm will be used if the send
        buffer size is <= this value (in bytes)
    Default: 2048

MPIR_CVAR_MAX_SMP_REDUCE_MSG_SIZE
    Aliases: MVP_MAX_SMP_REDUCE_MSG_SIZE
             MPICH_MAX_SMP_REDUCE_MSG_SIZE
    Description: Maximum message size for which SMP-aware reduce is used. 
        A value of '0' uses SMP-aware reduce for all message sizes.
    Default: 0

MPIR_CVAR_REDUCE_INTRA_ALGORITHM
    Aliases: MVP_REDUCE_INTRA_ALGORITHM
             MPICH_REDUCE_INTRA_ALGORITHM
    Description: Variable to select reduce algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        binomial              - Force binomial algorithm
        nb                    - Force nonblocking algorithm
        smp                   - Force smp algorithm
        reduce_scatter_gather - Force reduce scatter gather algorithm
        osu_knomial           - Force MVAPICH knomial algorithm
        osu_allreduce         - Force MVAPICH allreduce algorithm
    Default: MPIR_CVAR_REDUCE_INTRA_ALGORITHM_auto

MPIR_CVAR_REDUCE_INTER_ALGORITHM
    Aliases: MVP_REDUCE_INTER_ALGORITHM
             MPICH_REDUCE_INTER_ALGORITHM
    Description: Variable to select reduce algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        local_reduce_remote_send - Force local-reduce-remote-send algorithm
        nb                       - Force nonblocking algorithm
    Default: MPIR_CVAR_REDUCE_INTER_ALGORITHM_auto

MPIR_CVAR_IREDUCE_TREE_KVAL
    Aliases: MVP_IREDUCE_TREE_KVAL
             MPICH_IREDUCE_TREE_KVAL
    Description: k value for tree (kary, knomial, etc.) based ireduce
    Default: 2

MPIR_CVAR_IREDUCE_TREE_TYPE
    Aliases: MVP_IREDUCE_TREE_TYPE
             MPICH_IREDUCE_TREE_TYPE
    Description: Tree type for tree based ireduce kary      - kary tree
        knomial_1 - knomial_1 tree knomial_2 - knomial_2 tree
        topology_aware - topology_aware tree type topology_aware_k -
        topology_aware tree type with branching factor k topology_wave -
        topology_wave tree type
    Default: "kary"

MPIR_CVAR_IREDUCE_TOPO_REORDER_ENABLE
    Aliases: MVP_IREDUCE_TOPO_REORDER_ENABLE
             MPICH_IREDUCE_TOPO_REORDER_ENABLE
    Description: This cvar controls if the leaders are reordered based on
        the number of ranks in each group.
    Default: 1

MPIR_CVAR_IREDUCE_TOPO_OVERHEAD
    Aliases: MVP_IREDUCE_TOPO_OVERHEAD
             MPICH_IREDUCE_TOPO_OVERHEAD
    Description: This cvar controls the size of the overhead.
    Default: 200

MPIR_CVAR_IREDUCE_TOPO_DIFF_GROUPS
    Aliases: MVP_IREDUCE_TOPO_DIFF_GROUPS
             MPICH_IREDUCE_TOPO_DIFF_GROUPS
    Description: This cvar controls the latency between different groups.
    Default: 2800

MPIR_CVAR_IREDUCE_TOPO_DIFF_SWITCHES
    Aliases: MVP_IREDUCE_TOPO_DIFF_SWITCHES
             MPICH_IREDUCE_TOPO_DIFF_SWITCHES
    Description: This cvar controls the latency between different switches
        in the same groups.
    Default: 1900

MPIR_CVAR_IREDUCE_TOPO_SAME_SWITCHES
    Aliases: MVP_IREDUCE_TOPO_SAME_SWITCHES
             MPICH_IREDUCE_TOPO_SAME_SWITCHES
    Description: This cvar controls the latency in the same switch.
    Default: 1600

MPIR_CVAR_IREDUCE_TREE_PIPELINE_CHUNK_SIZE
    Aliases: MVP_IREDUCE_TREE_PIPELINE_CHUNK_SIZE
             MPICH_IREDUCE_TREE_PIPELINE_CHUNK_SIZE
    Description: Maximum chunk size (in bytes) for pipelining in tree based
        ireduce. Default value is 0, that is, no pipelining by default
    Default: -1

MPIR_CVAR_IREDUCE_RING_CHUNK_SIZE
    Aliases: MVP_IREDUCE_RING_CHUNK_SIZE
             MPICH_IREDUCE_RING_CHUNK_SIZE
    Description: Maximum chunk size (in bytes) for pipelining in ireduce
        ring algorithm. Default value is 0, that is, no pipelining by
        default
    Default: 0

MPIR_CVAR_IREDUCE_TREE_BUFFER_PER_CHILD
    Aliases: MVP_IREDUCE_TREE_BUFFER_PER_CHILD
             MPICH_IREDUCE_TREE_BUFFER_PER_CHILD
    Description: If set to true, a rank in tree algorithms will allocate a
        dedicated buffer for every child it receives data from. This would
        mean more memory consumption but it would allow preposting of the
        receives and hence reduce the number of unexpected messages. If set
        to false, there is only one buffer that is used to receive the data
        from all the children. The receives are therefore serialized, that
        is, only one receive can be posted at a time.
    Default: 0

MPIR_CVAR_IREDUCE_INTRA_ALGORITHM
    Aliases: MVP_IREDUCE_INTRA_ALGORITHM
             MPICH_IREDUCE_INTRA_ALGORITHM
    Description: Variable to select ireduce algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_smp                   - Force smp algorithm
        sched_binomial              - Force binomial algorithm
        sched_reduce_scatter_gather - Force reduce scatter gather algorithm
        tsp_tree                - Force Generic Transport Tree
        tsp_ring                - Force Generic Transport Ring
    Default: MPIR_CVAR_IREDUCE_INTRA_ALGORITHM_auto

MPIR_CVAR_IREDUCE_INTER_ALGORITHM
    Aliases: MVP_IREDUCE_INTER_ALGORITHM
             MPICH_IREDUCE_INTER_ALGORITHM
    Description: Variable to select ireduce algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_local_reduce_remote_send - Force local-reduce-remote-send
        algorithm
    Default: MPIR_CVAR_IREDUCE_INTER_ALGORITHM_auto

MPIR_CVAR_ALLREDUCE_SHORT_MSG_SIZE
    Aliases: MVP_ALLREDUCE_SHORT_MSG_SIZE
             MPICH_ALLREDUCE_SHORT_MSG_SIZE
    Description: the short message algorithm will be used if the send
        buffer size is <= this value (in bytes)
    Default: 2048

MPIR_CVAR_MAX_SMP_ALLREDUCE_MSG_SIZE
    Aliases: MVP_MAX_SMP_ALLREDUCE_MSG_SIZE
             MPICH_MAX_SMP_ALLREDUCE_MSG_SIZE
    Description: Maximum message size for which SMP-aware allreduce is
        used.  A value of '0' uses SMP-aware allreduce for all message
        sizes.
    Default: 0

MPIR_CVAR_ALLREDUCE_INTRA_ALGORITHM
    Aliases: MVP_ALLREDUCE_INTRA_ALGORITHM
             MPICH_ALLREDUCE_INTRA_ALGORITHM
    Description: Variable to select allreduce algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb                       - Force nonblocking algorithm
        smp                      - Force smp algorithm
        recursive_doubling       - Force recursive doubling algorithm
        recursive_multiplying    - Force recursive multiplying algorithm
        reduce_scatter_allgather - Force reduce scatter allgather algorithm
        tree                     - Force pipelined tree algorithm
        recexch                  - Force generic transport recursive
        exchange algorithm
        ring                     - Force ring algorithm
        k_reduce_scatter_allgather - Force reduce scatter allgather
        algorithm
        mvapich_tuned            - Use MVAPICH autotuning
        osu_mcast                - Force osu mcast based design
        osu_sharp                - Force osu sharp design
    Default: MPIR_CVAR_ALLREDUCE_INTRA_ALGORITHM_auto

MPIR_CVAR_ALLREDUCE_RECURSIVE_MULTIPLYING_KVAL
    Aliases: MVP_ALLREDUCE_RECURSIVE_MULTIPLYING_KVAL
             MPICH_ALLREDUCE_RECURSIVE_MULTIPLYING_KVAL
    Description: radix value (power of k) for generic recursive multiplying
        based allreduce
    Default: 2

MPIR_CVAR_ALLREDUCE_TREE_TYPE
    Aliases: MVP_ALLREDUCE_TREE_TYPE
             MPICH_ALLREDUCE_TREE_TYPE
    Description: Tree type for tree based allreduce knomial_1 is default as
        it supports both commutative and non-commutative reduce operations
        kary      - kary tree type knomial_1 - knomial_1 tree type (tree
        grows starting from the left of the root) knomial_2 - knomial_2
        tree type (tree grows starting from the right of the root)
        topology_aware - topology_aware tree type topology_aware_k -
        topology_aware tree type with branching factor k topology_wave -
        topology_wave tree type
    Default: "knomial_1"

MPIR_CVAR_ALLREDUCE_TREE_KVAL
    Aliases: MVP_ALLREDUCE_TREE_KVAL
             MPICH_ALLREDUCE_TREE_KVAL
    Description: Indicates the branching factor for kary or knomial trees.
    Default: 2

MPIR_CVAR_ALLREDUCE_TOPO_REORDER_ENABLE
    Aliases: MVP_ALLREDUCE_TOPO_REORDER_ENABLE
             MPICH_ALLREDUCE_TOPO_REORDER_ENABLE
    Description: This cvar controls if the leaders are reordered based on
        the number of ranks in each group.
    Default: 1

MPIR_CVAR_ALLREDUCE_TOPO_OVERHEAD
    Aliases: MVP_ALLREDUCE_TOPO_OVERHEAD
             MPICH_ALLREDUCE_TOPO_OVERHEAD
    Description: This cvar controls the size of the overhead.
    Default: 200

MPIR_CVAR_ALLREDUCE_TOPO_DIFF_GROUPS
    Aliases: MVP_ALLREDUCE_TOPO_DIFF_GROUPS
             MPICH_ALLREDUCE_TOPO_DIFF_GROUPS
    Description: This cvar controls the latency between different groups.
    Default: 2800

MPIR_CVAR_ALLREDUCE_TOPO_DIFF_SWITCHES
    Aliases: MVP_ALLREDUCE_TOPO_DIFF_SWITCHES
             MPICH_ALLREDUCE_TOPO_DIFF_SWITCHES
    Description: This cvar controls the latency between different switches
        in the same groups.
    Default: 1900

MPIR_CVAR_ALLREDUCE_TOPO_SAME_SWITCHES
    Aliases: MVP_ALLREDUCE_TOPO_SAME_SWITCHES
             MPICH_ALLREDUCE_TOPO_SAME_SWITCHES
    Description: This cvar controls the latency in the same switch.
    Default: 1600

MPIR_CVAR_ALLREDUCE_TREE_PIPELINE_CHUNK_SIZE
    Aliases: MVP_ALLREDUCE_TREE_PIPELINE_CHUNK_SIZE
             MPICH_ALLREDUCE_TREE_PIPELINE_CHUNK_SIZE
    Description: Maximum chunk size (in bytes) for pipelining in tree based
        allreduce. Default value is 0, that is, no pipelining by default
    Default: 0

MPIR_CVAR_ALLREDUCE_TREE_BUFFER_PER_CHILD
    Aliases: MVP_ALLREDUCE_TREE_BUFFER_PER_CHILD
             MPICH_ALLREDUCE_TREE_BUFFER_PER_CHILD
    Description: If set to true, a rank in tree_kary and tree_knomial
        algorithms will allocate a dedicated buffer for every child it
        receives data from. This would mean more memory consumption but it
        would allow preposting of the receives and hence reduce the number
        of unexpected messages. If set to false, there is only one buffer
        that is used to receive the data from all the children. The
        receives are therefore serialized, that is, only one receive can be
        posted at a time.
    Default: 0

MPIR_CVAR_ALLREDUCE_RECEXCH_KVAL
    Aliases: MVP_ALLREDUCE_RECEXCH_KVAL
             MPICH_ALLREDUCE_RECEXCH_KVAL
    Description: k value for recursive exchange based allreduce
    Default: 2

MPIR_CVAR_ALLREDUCE_RECEXCH_SINGLE_PHASE_RECV
    Aliases: MVP_ALLREDUCE_RECEXCH_SINGLE_PHASE_RECV
             MPICH_ALLREDUCE_RECEXCH_SINGLE_PHASE_RECV
    Description: This CVAR controls whether the recv is posted for one
        phase or two phases in recexch algos. By default, we post the recvs
        for 2 phases.
    Default: 0

MPIR_CVAR_ALLREDUCE_INTER_ALGORITHM
    Aliases: MVP_ALLREDUCE_INTER_ALGORITHM
             MPICH_ALLREDUCE_INTER_ALGORITHM
    Description: Variable to select allreduce algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb                    - Force nonblocking algorithm
        reduce_exchange_bcast - Force reduce-exchange-bcast algorithm
    Default: MPIR_CVAR_ALLREDUCE_INTER_ALGORITHM_auto

MPIR_CVAR_IALLREDUCE_TREE_KVAL
    Aliases: MVP_IALLREDUCE_TREE_KVAL
             MPICH_IALLREDUCE_TREE_KVAL
    Description: k value for tree based iallreduce (for tree_kary and
        tree_knomial)
    Default: 2

MPIR_CVAR_IALLREDUCE_TREE_TYPE
    Aliases: MVP_IALLREDUCE_TREE_TYPE
             MPICH_IALLREDUCE_TREE_TYPE
    Description: Tree type for tree based ibcast kary      - kary tree type
        knomial_1 - knomial_1 tree type knomial_2 - knomial_2 tree type
    Default: "kary"

MPIR_CVAR_IALLREDUCE_TREE_PIPELINE_CHUNK_SIZE
    Aliases: MVP_IALLREDUCE_TREE_PIPELINE_CHUNK_SIZE
             MPICH_IALLREDUCE_TREE_PIPELINE_CHUNK_SIZE
    Description: Maximum chunk size (in bytes) for pipelining in tree based
        iallreduce. Default value is 0, that is, no pipelining by default
    Default: 0

MPIR_CVAR_IALLREDUCE_TREE_BUFFER_PER_CHILD
    Aliases: MVP_IALLREDUCE_TREE_BUFFER_PER_CHILD
             MPICH_IALLREDUCE_TREE_BUFFER_PER_CHILD
    Description: If set to true, a rank in tree_kary and tree_knomial
        algorithms will allocate a dedicated buffer for every child it
        receives data from. This would mean more memory consumption but it
        would allow preposting of the receives and hence reduce the number
        of unexpected messages. If set to false, there is only one buffer
        that is used to receive the data from all the children. The
        receives are therefore serialized, that is, only one receive can be
        posted at a time.
    Default: 0

MPIR_CVAR_IALLREDUCE_RECEXCH_KVAL
    Aliases: MVP_IALLREDUCE_RECEXCH_KVAL
             MPICH_IALLREDUCE_RECEXCH_KVAL
    Description: k value for recursive exchange based iallreduce
    Default: 2

MPIR_CVAR_IALLREDUCE_INTRA_ALGORITHM
    Aliases: MVP_IALLREDUCE_INTRA_ALGORITHM
             MPICH_IALLREDUCE_INTRA_ALGORITHM
    Description: Variable to select iallreduce algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_naive                      - Force naive algorithm
        sched_smp                        - Force smp algorithm
        sched_recursive_doubling         - Force recursive doubling
        algorithm
        sched_reduce_scatter_allgather   - Force reduce scatter allgather
        algorithm
        tsp_recexch_single_buffer    - Force generic transport recursive
        exchange with single buffer for receives
        tsp_recexch_multiple_buffer  - Force generic transport recursive
        exchange with multiple buffers for receives
        tsp_tree                     - Force generic transport tree
        algorithm
        tsp_ring                     - Force generic transport ring
        algorithm
        tsp_recexch_reduce_scatter_recexch_allgatherv  - Force generic
        transport recursive exchange with reduce scatter and allgatherv
    Default: MPIR_CVAR_IALLREDUCE_INTRA_ALGORITHM_auto

MPIR_CVAR_IALLREDUCE_INTER_ALGORITHM
    Aliases: MVP_IALLREDUCE_INTER_ALGORITHM
             MPICH_IALLREDUCE_INTER_ALGORITHM
    Description: Variable to select iallreduce algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_remote_reduce_local_bcast - Force remote-reduce-local-bcast
        algorithm
    Default: MPIR_CVAR_IALLREDUCE_INTER_ALGORITHM_auto

MPIR_CVAR_REDUCE_SCATTER_COMMUTATIVE_LONG_MSG_SIZE
    Aliases: MVP_REDUCE_SCATTER_COMMUTATIVE_LONG_MSG_SIZE
             MPICH_REDUCE_SCATTER_COMMUTATIVE_LONG_MSG_SIZE
    Description: the long message algorithm will be used if the operation
        is commutative and the send buffer size is >= this value (in bytes)
    Default: 524288

MPIR_CVAR_REDUCE_SCATTER_INTRA_ALGORITHM
    Aliases: MVP_REDUCE_SCATTER_INTRA_ALGORITHM
             MPICH_REDUCE_SCATTER_INTRA_ALGORITHM
    Description: Variable to select reduce_scatter algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb                 - Force nonblocking algorithm
        noncommutative     - Force noncommutative algorithm
        pairwise           - Force pairwise algorithm
        recursive_doubling - Force recursive doubling algorithm
        recursive_halving  - Force recursive halving algorithm
        osu_basic          - Force MVAPICH basic algorithm
        osu_ring           - Force MVAPICH ring algorithm
    Default: MPIR_CVAR_REDUCE_SCATTER_INTRA_ALGORITHM_auto

MPIR_CVAR_REDUCE_SCATTER_INTER_ALGORITHM
    Aliases: MVP_REDUCE_SCATTER_INTER_ALGORITHM
             MPICH_REDUCE_SCATTER_INTER_ALGORITHM
    Description: Variable to select reduce_scatter algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb                          - Force nonblocking algorithm
        remote_reduce_local_scatter - Force remote-reduce-local-scatter
        algorithm
    Default: MPIR_CVAR_REDUCE_SCATTER_INTER_ALGORITHM_auto

MPIR_CVAR_IREDUCE_SCATTER_RECEXCH_KVAL
    Aliases: MVP_IREDUCE_SCATTER_RECEXCH_KVAL
             MPICH_IREDUCE_SCATTER_RECEXCH_KVAL
    Description: k value for recursive exchange based ireduce_scatter
    Default: 2

MPIR_CVAR_IREDUCE_SCATTER_INTRA_ALGORITHM
    Aliases: MVP_IREDUCE_SCATTER_INTRA_ALGORITHM
             MPICH_IREDUCE_SCATTER_INTRA_ALGORITHM
    Description: Variable to select ireduce_scatter algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_noncommutative     - Force noncommutative algorithm
        sched_recursive_doubling - Force recursive doubling algorithm
        sched_pairwise           - Force pairwise algorithm
        sched_recursive_halving  - Force recursive halving algorithm
        tsp_recexch          - Force generic transport recursive exchange
        algorithm
    Default: MPIR_CVAR_IREDUCE_SCATTER_INTRA_ALGORITHM_auto

MPIR_CVAR_IREDUCE_SCATTER_INTER_ALGORITHM
    Aliases: MVP_IREDUCE_SCATTER_INTER_ALGORITHM
             MPICH_IREDUCE_SCATTER_INTER_ALGORITHM
    Description: Variable to select ireduce_scatter algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_remote_reduce_local_scatterv - Force
        remote-reduce-local-scatterv algorithm
    Default: MPIR_CVAR_IREDUCE_SCATTER_INTER_ALGORITHM_auto

MPIR_CVAR_REDUCE_SCATTER_BLOCK_INTRA_ALGORITHM
    Aliases: MVP_REDUCE_SCATTER_BLOCK_INTRA_ALGORITHM
             MPICH_REDUCE_SCATTER_BLOCK_INTRA_ALGORITHM
    Description: Variable to select reduce_scatter_block algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        noncommutative     - Force noncommutative algorithm
        recursive_doubling - Force recursive doubling algorithm
        pairwise           - Force pairwise algorithm
        recursive_halving  - Force recursive halving algorithm
        nb                 - Force nonblocking algorithm
    Default: MPIR_CVAR_REDUCE_SCATTER_BLOCK_INTRA_ALGORITHM_auto

MPIR_CVAR_REDUCE_SCATTER_BLOCK_INTER_ALGORITHM
    Aliases: MVP_REDUCE_SCATTER_BLOCK_INTER_ALGORITHM
             MPICH_REDUCE_SCATTER_BLOCK_INTER_ALGORITHM
    Description: Variable to select reduce_scatter_block algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb                          - Force nonblocking algorithm
        remote_reduce_local_scatter - Force remote-reduce-local-scatter
        algorithm
    Default: MPIR_CVAR_REDUCE_SCATTER_BLOCK_INTER_ALGORITHM_auto

MPIR_CVAR_IREDUCE_SCATTER_BLOCK_RECEXCH_KVAL
    Aliases: MVP_IREDUCE_SCATTER_BLOCK_RECEXCH_KVAL
             MPICH_IREDUCE_SCATTER_BLOCK_RECEXCH_KVAL
    Description: k value for recursive exchange based ireduce_scatter_block
    Default: 2

MPIR_CVAR_IREDUCE_SCATTER_BLOCK_INTRA_ALGORITHM
    Aliases: MVP_IREDUCE_SCATTER_BLOCK_INTRA_ALGORITHM
             MPICH_IREDUCE_SCATTER_BLOCK_INTRA_ALGORITHM
    Description: Variable to select ireduce_scatter_block algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_noncommutative     - Force noncommutative algorithm
        sched_recursive_doubling - Force recursive doubling algorithm
        sched_pairwise           - Force pairwise algorithm
        sched_recursive_halving  - Force recursive halving algorithm
        tsp_recexch          - Force generic transport recursive exchange
        algorithm
    Default: MPIR_CVAR_IREDUCE_SCATTER_BLOCK_INTRA_ALGORITHM_auto

MPIR_CVAR_IREDUCE_SCATTER_BLOCK_INTER_ALGORITHM
    Aliases: MVP_IREDUCE_SCATTER_BLOCK_INTER_ALGORITHM
             MPICH_IREDUCE_SCATTER_BLOCK_INTER_ALGORITHM
    Description: Variable to select ireduce_scatter_block algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_remote_reduce_local_scatterv - Force
        remote-reduce-local-scatterv algorithm
    Default: MPIR_CVAR_IREDUCE_SCATTER_BLOCK_INTER_ALGORITHM_auto

MPIR_CVAR_SCAN_INTRA_ALGORITHM
    Aliases: MVP_SCAN_INTRA_ALGORITHM
             MPICH_SCAN_INTRA_ALGORITHM
    Description: Variable to select allgather algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb                 - Force nonblocking algorithm
        smp                - Force smp algorithm
        recursive_doubling - Force recursive doubling algorithm
    Default: MPIR_CVAR_SCAN_INTRA_ALGORITHM_auto

MPIR_CVAR_ISCAN_INTRA_ALGORITHM
    Aliases: MVP_ISCAN_INTRA_ALGORITHM
             MPICH_ISCAN_INTRA_ALGORITHM
    Description: Variable to select allgather algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_smp                  - Force smp algorithm
        sched_recursive_doubling   - Force recursive doubling algorithm
        tsp_recursive_doubling - Force generic transport recursive doubling
        algorithm
    Default: MPIR_CVAR_ISCAN_INTRA_ALGORITHM_auto

MPIR_CVAR_EXSCAN_INTRA_ALGORITHM
    Aliases: MVP_EXSCAN_INTRA_ALGORITHM
             MPICH_EXSCAN_INTRA_ALGORITHM
    Description: Variable to select allgather algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb                 - Force nonblocking algorithm
        recursive_doubling - Force recursive doubling algorithm
    Default: MPIR_CVAR_EXSCAN_INTRA_ALGORITHM_auto

MPIR_CVAR_IEXSCAN_INTRA_ALGORITHM
    Aliases: MVP_IEXSCAN_INTRA_ALGORITHM
             MPICH_IEXSCAN_INTRA_ALGORITHM
    Description: Variable to select iexscan algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_recursive_doubling - Force recursive doubling algorithm
    Default: MPIR_CVAR_IEXSCAN_INTRA_ALGORITHM_auto

MPIR_CVAR_NEIGHBOR_ALLGATHER_INTRA_ALGORITHM
    Aliases: MVP_NEIGHBOR_ALLGATHER_INTRA_ALGORITHM
             MPICH_NEIGHBOR_ALLGATHER_INTRA_ALGORITHM
    Description: Variable to select ineighbor_allgather algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb   - Force nonblocking algorithm
    Default: MPIR_CVAR_NEIGHBOR_ALLGATHER_INTRA_ALGORITHM_auto

MPIR_CVAR_NEIGHBOR_ALLGATHER_INTER_ALGORITHM
    Aliases: MVP_NEIGHBOR_ALLGATHER_INTER_ALGORITHM
             MPICH_NEIGHBOR_ALLGATHER_INTER_ALGORITHM
    Description: Variable to select ineighbor_allgather algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb   - Force nonblocking algorithm
    Default: MPIR_CVAR_NEIGHBOR_ALLGATHER_INTER_ALGORITHM_auto

MPIR_CVAR_INEIGHBOR_ALLGATHER_INTRA_ALGORITHM
    Aliases: MVP_INEIGHBOR_ALLGATHER_INTRA_ALGORITHM
             MPICH_INEIGHBOR_ALLGATHER_INTRA_ALGORITHM
    Description: Variable to select ineighbor_allgather algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_linear    - Force linear algorithm
        tsp_linear  - Force generic transport based linear algorithm
    Default: MPIR_CVAR_INEIGHBOR_ALLGATHER_INTRA_ALGORITHM_auto

MPIR_CVAR_INEIGHBOR_ALLGATHER_INTER_ALGORITHM
    Aliases: MVP_INEIGHBOR_ALLGATHER_INTER_ALGORITHM
             MPICH_INEIGHBOR_ALLGATHER_INTER_ALGORITHM
    Description: Variable to select ineighbor_allgather algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_linear    - Force linear algorithm
        tsp_linear  - Force generic transport based linear algorithm
    Default: MPIR_CVAR_INEIGHBOR_ALLGATHER_INTER_ALGORITHM_auto

MPIR_CVAR_NEIGHBOR_ALLGATHERV_INTRA_ALGORITHM
    Aliases: MVP_NEIGHBOR_ALLGATHERV_INTRA_ALGORITHM
             MPICH_NEIGHBOR_ALLGATHERV_INTRA_ALGORITHM
    Description: Variable to select neighbor_allgatherv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb   - Force nb algorithm
    Default: MPIR_CVAR_NEIGHBOR_ALLGATHERV_INTRA_ALGORITHM_auto

MPIR_CVAR_NEIGHBOR_ALLGATHERV_INTER_ALGORITHM
    Aliases: MVP_NEIGHBOR_ALLGATHERV_INTER_ALGORITHM
             MPICH_NEIGHBOR_ALLGATHERV_INTER_ALGORITHM
    Description: Variable to select neighbor_allgatherv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb   - Force nb algorithm
    Default: MPIR_CVAR_NEIGHBOR_ALLGATHERV_INTER_ALGORITHM_auto

MPIR_CVAR_INEIGHBOR_ALLGATHERV_INTRA_ALGORITHM
    Aliases: MVP_INEIGHBOR_ALLGATHERV_INTRA_ALGORITHM
             MPICH_INEIGHBOR_ALLGATHERV_INTRA_ALGORITHM
    Description: Variable to select ineighbor_allgatherv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_linear          - Force linear algorithm
        tsp_linear        - Force generic transport based linear algorithm
    Default: MPIR_CVAR_INEIGHBOR_ALLGATHERV_INTRA_ALGORITHM_auto

MPIR_CVAR_INEIGHBOR_ALLGATHERV_INTER_ALGORITHM
    Aliases: MVP_INEIGHBOR_ALLGATHERV_INTER_ALGORITHM
             MPICH_INEIGHBOR_ALLGATHERV_INTER_ALGORITHM
    Description: Variable to select ineighbor_allgatherv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_linear          - Force linear algorithm
        tsp_linear        - Force generic transport based linear algorithm
    Default: MPIR_CVAR_INEIGHBOR_ALLGATHERV_INTER_ALGORITHM_auto

MPIR_CVAR_NEIGHBOR_ALLTOALL_INTRA_ALGORITHM
    Aliases: MVP_NEIGHBOR_ALLTOALL_INTRA_ALGORITHM
             MPICH_NEIGHBOR_ALLTOALL_INTRA_ALGORITHM
    Description: Variable to select neighbor_alltoall algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb   - Force nb algorithm
    Default: MPIR_CVAR_NEIGHBOR_ALLTOALL_INTRA_ALGORITHM_auto

MPIR_CVAR_NEIGHBOR_ALLTOALL_INTER_ALGORITHM
    Aliases: MVP_NEIGHBOR_ALLTOALL_INTER_ALGORITHM
             MPICH_NEIGHBOR_ALLTOALL_INTER_ALGORITHM
    Description: Variable to select neighbor_alltoall algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb   - Force nb algorithm
    Default: MPIR_CVAR_NEIGHBOR_ALLTOALL_INTER_ALGORITHM_auto

MPIR_CVAR_INEIGHBOR_ALLTOALL_INTRA_ALGORITHM
    Aliases: MVP_INEIGHBOR_ALLTOALL_INTRA_ALGORITHM
             MPICH_INEIGHBOR_ALLTOALL_INTRA_ALGORITHM
    Description: Variable to select ineighbor_alltoall algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_linear          - Force linear algorithm
        tsp_linear        - Force generic transport based linear algorithm
    Default: MPIR_CVAR_INEIGHBOR_ALLTOALL_INTRA_ALGORITHM_auto

MPIR_CVAR_INEIGHBOR_ALLTOALL_INTER_ALGORITHM
    Aliases: MVP_INEIGHBOR_ALLTOALL_INTER_ALGORITHM
             MPICH_INEIGHBOR_ALLTOALL_INTER_ALGORITHM
    Description: Variable to select ineighbor_alltoall algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_linear          - Force linear algorithm
        tsp_linear        - Force generic transport based linear algorithm
    Default: MPIR_CVAR_INEIGHBOR_ALLTOALL_INTER_ALGORITHM_auto

MPIR_CVAR_NEIGHBOR_ALLTOALLV_INTRA_ALGORITHM
    Aliases: MVP_NEIGHBOR_ALLTOALLV_INTRA_ALGORITHM
             MPICH_NEIGHBOR_ALLTOALLV_INTRA_ALGORITHM
    Description: Variable to select neighbor_alltoallv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb   - Force nb algorithm
    Default: MPIR_CVAR_NEIGHBOR_ALLTOALLV_INTRA_ALGORITHM_auto

MPIR_CVAR_NEIGHBOR_ALLTOALLV_INTER_ALGORITHM
    Aliases: MVP_NEIGHBOR_ALLTOALLV_INTER_ALGORITHM
             MPICH_NEIGHBOR_ALLTOALLV_INTER_ALGORITHM
    Description: Variable to select neighbor_alltoallv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb   - Force nb algorithm
    Default: MPIR_CVAR_NEIGHBOR_ALLTOALLV_INTER_ALGORITHM_auto

MPIR_CVAR_INEIGHBOR_ALLTOALLV_INTRA_ALGORITHM
    Aliases: MVP_INEIGHBOR_ALLTOALLV_INTRA_ALGORITHM
             MPICH_INEIGHBOR_ALLTOALLV_INTRA_ALGORITHM
    Description: Variable to select ineighbor_alltoallv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_linear          - Force linear algorithm
        tsp_linear  - Force generic transport based linear algorithm
    Default: MPIR_CVAR_INEIGHBOR_ALLTOALLV_INTRA_ALGORITHM_auto

MPIR_CVAR_INEIGHBOR_ALLTOALLV_INTER_ALGORITHM
    Aliases: MVP_INEIGHBOR_ALLTOALLV_INTER_ALGORITHM
             MPICH_INEIGHBOR_ALLTOALLV_INTER_ALGORITHM
    Description: Variable to select ineighbor_alltoallv algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_linear          - Force linear algorithm
        tsp_linear  - Force generic transport based linear algorithm
    Default: MPIR_CVAR_INEIGHBOR_ALLTOALLV_INTER_ALGORITHM_auto

MPIR_CVAR_NEIGHBOR_ALLTOALLW_INTRA_ALGORITHM
    Aliases: MVP_NEIGHBOR_ALLTOALLW_INTRA_ALGORITHM
             MPICH_NEIGHBOR_ALLTOALLW_INTRA_ALGORITHM
    Description: Variable to select neighbor_alltoallw algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb   - Force nb algorithm
    Default: MPIR_CVAR_NEIGHBOR_ALLTOALLW_INTRA_ALGORITHM_auto

MPIR_CVAR_NEIGHBOR_ALLTOALLW_INTER_ALGORITHM
    Aliases: MVP_NEIGHBOR_ALLTOALLW_INTER_ALGORITHM
             MPICH_NEIGHBOR_ALLTOALLW_INTER_ALGORITHM
    Description: Variable to select neighbor_alltoallw algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        nb   - Force nb algorithm
    Default: MPIR_CVAR_NEIGHBOR_ALLTOALLW_INTER_ALGORITHM_auto

MPIR_CVAR_INEIGHBOR_ALLTOALLW_INTRA_ALGORITHM
    Aliases: MVP_INEIGHBOR_ALLTOALLW_INTRA_ALGORITHM
             MPICH_INEIGHBOR_ALLTOALLW_INTRA_ALGORITHM
    Description: Variable to select ineighbor_alltoallw algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_linear          - Force linear algorithm
        tsp_linear        - Force generic transport based linear algorithm
    Default: MPIR_CVAR_INEIGHBOR_ALLTOALLW_INTRA_ALGORITHM_auto

MPIR_CVAR_INEIGHBOR_ALLTOALLW_INTER_ALGORITHM
    Aliases: MVP_INEIGHBOR_ALLTOALLW_INTER_ALGORITHM
             MPICH_INEIGHBOR_ALLTOALLW_INTER_ALGORITHM
    Description: Variable to select ineighbor_alltoallw algorithm
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE)
        sched_auto - Internal algorithm selection for sched-based
        algorithms
        sched_linear          - Force linear algorithm
        tsp_linear        - Force generic transport based linear algorithm
    Default: MPIR_CVAR_INEIGHBOR_ALLTOALLW_INTER_ALGORITHM_auto

MPIR_CVAR_BARRIER_DEVICE_COLLECTIVE
    Aliases: MVP_BARRIER_DEVICE_COLLECTIVE
             MPICH_BARRIER_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Barrier will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_IBARRIER_DEVICE_COLLECTIVE
    Aliases: MVP_IBARRIER_DEVICE_COLLECTIVE
             MPICH_IBARRIER_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Ibarrier will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_BARRIER_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_BARRIER_INIT_DEVICE_COLLECTIVE
             MPICH_BARRIER_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Barrier will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_BCAST_DEVICE_COLLECTIVE
    Aliases: MVP_BCAST_DEVICE_COLLECTIVE
             MPICH_BCAST_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Bcast will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_IBCAST_DEVICE_COLLECTIVE
    Aliases: MVP_IBCAST_DEVICE_COLLECTIVE
             MPICH_IBCAST_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Ibcast will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_BCAST_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_BCAST_INIT_DEVICE_COLLECTIVE
             MPICH_BCAST_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Bcast_init will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_GATHER_DEVICE_COLLECTIVE
    Aliases: MVP_GATHER_DEVICE_COLLECTIVE
             MPICH_GATHER_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Gather will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_IGATHER_DEVICE_COLLECTIVE
    Aliases: MVP_IGATHER_DEVICE_COLLECTIVE
             MPICH_IGATHER_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Igather will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_GATHER_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_GATHER_INIT_DEVICE_COLLECTIVE
             MPICH_GATHER_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Gather_init will allow
        the device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_GATHERV_DEVICE_COLLECTIVE
    Aliases: MVP_GATHERV_DEVICE_COLLECTIVE
             MPICH_GATHERV_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Gatherv will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_IGATHERV_DEVICE_COLLECTIVE
    Aliases: MVP_IGATHERV_DEVICE_COLLECTIVE
             MPICH_IGATHERV_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Igatherv will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_GATHERV_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_GATHERV_INIT_DEVICE_COLLECTIVE
             MPICH_GATHERV_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Gatherv_init will allow
        the device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_SCATTER_DEVICE_COLLECTIVE
    Aliases: MVP_SCATTER_DEVICE_COLLECTIVE
             MPICH_SCATTER_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Scatter will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_ISCATTER_DEVICE_COLLECTIVE
    Aliases: MVP_ISCATTER_DEVICE_COLLECTIVE
             MPICH_ISCATTER_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Iscatter will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_SCATTER_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_SCATTER_INIT_DEVICE_COLLECTIVE
             MPICH_SCATTER_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Scatter_init will allow
        the device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_SCATTERV_DEVICE_COLLECTIVE
    Aliases: MVP_SCATTERV_DEVICE_COLLECTIVE
             MPICH_SCATTERV_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Scatterv will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_ISCATTERV_DEVICE_COLLECTIVE
    Aliases: MVP_ISCATTERV_DEVICE_COLLECTIVE
             MPICH_ISCATTERV_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Iscatterv will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_SCATTERV_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_SCATTERV_INIT_DEVICE_COLLECTIVE
             MPICH_SCATTERV_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Scatterv_init will allow
        the device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_ALLGATHER_DEVICE_COLLECTIVE
    Aliases: MVP_ALLGATHER_DEVICE_COLLECTIVE
             MPICH_ALLGATHER_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Allgather will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_IALLGATHER_DEVICE_COLLECTIVE
    Aliases: MVP_IALLGATHER_DEVICE_COLLECTIVE
             MPICH_IALLGATHER_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Iallgather will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_ALLGATHER_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_ALLGATHER_INIT_DEVICE_COLLECTIVE
             MPICH_ALLGATHER_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Allgather_init will allow
        the device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_ALLGATHERV_DEVICE_COLLECTIVE
    Aliases: MVP_ALLGATHERV_DEVICE_COLLECTIVE
             MPICH_ALLGATHERV_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Allgatherv will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_IALLGATHERV_DEVICE_COLLECTIVE
    Aliases: MVP_IALLGATHERV_DEVICE_COLLECTIVE
             MPICH_IALLGATHERV_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Iallgatherv will allow
        the device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_ALLGATHERV_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_ALLGATHERV_INIT_DEVICE_COLLECTIVE
             MPICH_ALLGATHERV_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Allgatherv_init will
        allow the device to override the MPIR-level collective algorithms. 
        The device might still call the MPIR-level algorithms manually.  If
        set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_ALLTOALL_DEVICE_COLLECTIVE
    Aliases: MVP_ALLTOALL_DEVICE_COLLECTIVE
             MPICH_ALLTOALL_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Alltoall will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_IALLTOALL_DEVICE_COLLECTIVE
    Aliases: MVP_IALLTOALL_DEVICE_COLLECTIVE
             MPICH_IALLTOALL_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Ialltoall will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_ALLTOALL_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_ALLTOALL_INIT_DEVICE_COLLECTIVE
             MPICH_ALLTOALL_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Alltoall_init will allow
        the device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_ALLTOALLV_DEVICE_COLLECTIVE
    Aliases: MVP_ALLTOALLV_DEVICE_COLLECTIVE
             MPICH_ALLTOALLV_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Alltoallv will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_IALLTOALLV_DEVICE_COLLECTIVE
    Aliases: MVP_IALLTOALLV_DEVICE_COLLECTIVE
             MPICH_IALLTOALLV_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Ialltoallv will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_ALLTOALLV_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_ALLTOALLV_INIT_DEVICE_COLLECTIVE
             MPICH_ALLTOALLV_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Alltoallv_init will allow
        the device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_ALLTOALLW_DEVICE_COLLECTIVE
    Aliases: MVP_ALLTOALLW_DEVICE_COLLECTIVE
             MPICH_ALLTOALLW_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Alltoallw will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_IALLTOALLW_DEVICE_COLLECTIVE
    Aliases: MVP_IALLTOALLW_DEVICE_COLLECTIVE
             MPICH_IALLTOALLW_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Ialltoallw will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_ALLTOALLW_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_ALLTOALLW_INIT_DEVICE_COLLECTIVE
             MPICH_ALLTOALLW_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Alltoallw_init will allow
        the device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_REDUCE_DEVICE_COLLECTIVE
    Aliases: MVP_REDUCE_DEVICE_COLLECTIVE
             MPICH_REDUCE_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Reduce will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_IREDUCE_DEVICE_COLLECTIVE
    Aliases: MVP_IREDUCE_DEVICE_COLLECTIVE
             MPICH_IREDUCE_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Ireduce will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_REDUCE_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_REDUCE_INIT_DEVICE_COLLECTIVE
             MPICH_REDUCE_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Reduce_init will allow
        the device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_ALLREDUCE_DEVICE_COLLECTIVE
    Aliases: MVP_ALLREDUCE_DEVICE_COLLECTIVE
             MPICH_ALLREDUCE_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Allreduce will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_IALLREDUCE_DEVICE_COLLECTIVE
    Aliases: MVP_IALLREDUCE_DEVICE_COLLECTIVE
             MPICH_IALLREDUCE_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Iallreduce will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_ALLREDUCE_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_ALLREDUCE_INIT_DEVICE_COLLECTIVE
             MPICH_ALLREDUCE_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Allreduce_init will allow
        the device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_REDUCE_SCATTER_DEVICE_COLLECTIVE
    Aliases: MVP_REDUCE_SCATTER_DEVICE_COLLECTIVE
             MPICH_REDUCE_SCATTER_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Reduce_scatter will allow
        the device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_IREDUCE_SCATTER_DEVICE_COLLECTIVE
    Aliases: MVP_IREDUCE_SCATTER_DEVICE_COLLECTIVE
             MPICH_IREDUCE_SCATTER_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Ireduce_scatter will
        allow the device to override the MPIR-level collective algorithms. 
        The device might still call the MPIR-level algorithms manually.  If
        set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_REDUCE_SCATTER_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_REDUCE_SCATTER_INIT_DEVICE_COLLECTIVE
             MPICH_REDUCE_SCATTER_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Reduce_scatter_init will
        allow the device to override the MPIR-level collective algorithms. 
        The device might still call the MPIR-level algorithms manually.  If
        set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_REDUCE_SCATTER_BLOCK_DEVICE_COLLECTIVE
    Aliases: MVP_REDUCE_SCATTER_BLOCK_DEVICE_COLLECTIVE
             MPICH_REDUCE_SCATTER_BLOCK_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Reduce_scatter_block will
        allow the device to override the MPIR-level collective algorithms. 
        The device might still call the MPIR-level algorithms manually.  If
        set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_IREDUCE_SCATTER_BLOCK_DEVICE_COLLECTIVE
    Aliases: MVP_IREDUCE_SCATTER_BLOCK_DEVICE_COLLECTIVE
             MPICH_IREDUCE_SCATTER_BLOCK_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Ireduce_scatter_block
        will allow the device to override the MPIR-level collective
        algorithms.  The device might still call the MPIR-level algorithms
        manually.  If set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_REDUCE_SCATTER_BLOCK_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_REDUCE_SCATTER_BLOCK_INIT_DEVICE_COLLECTIVE
             MPICH_REDUCE_SCATTER_BLOCK_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Reduce_scatter_block_init
        will allow the device to override the MPIR-level collective
        algorithms.  The device might still call the MPIR-level algorithms
        manually.  If set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_SCAN_DEVICE_COLLECTIVE
    Aliases: MVP_SCAN_DEVICE_COLLECTIVE
             MPICH_SCAN_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Scan will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_ISCAN_DEVICE_COLLECTIVE
    Aliases: MVP_ISCAN_DEVICE_COLLECTIVE
             MPICH_ISCAN_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Iscan will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_SCAN_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_SCAN_INIT_DEVICE_COLLECTIVE
             MPICH_SCAN_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Scan_init will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_EXSCAN_DEVICE_COLLECTIVE
    Aliases: MVP_EXSCAN_DEVICE_COLLECTIVE
             MPICH_EXSCAN_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Exscan will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_IEXSCAN_DEVICE_COLLECTIVE
    Aliases: MVP_IEXSCAN_DEVICE_COLLECTIVE
             MPICH_IEXSCAN_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Iexscan will allow the
        device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_EXSCAN_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_EXSCAN_INIT_DEVICE_COLLECTIVE
             MPICH_EXSCAN_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Exscan_init will allow
        the device to override the MPIR-level collective algorithms.  The
        device might still call the MPIR-level algorithms manually.  If set
        to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_NEIGHBOR_ALLGATHER_DEVICE_COLLECTIVE
    Aliases: MVP_NEIGHBOR_ALLGATHER_DEVICE_COLLECTIVE
             MPICH_NEIGHBOR_ALLGATHER_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Neighbor_allgather will
        allow the device to override the MPIR-level collective algorithms. 
        The device might still call the MPIR-level algorithms manually.  If
        set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_INEIGHBOR_ALLGATHER_DEVICE_COLLECTIVE
    Aliases: MVP_INEIGHBOR_ALLGATHER_DEVICE_COLLECTIVE
             MPICH_INEIGHBOR_ALLGATHER_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Ineighbor_allgather will
        allow the device to override the MPIR-level collective algorithms. 
        The device might still call the MPIR-level algorithms manually.  If
        set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_NEIGHBOR_ALLGATHER_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_NEIGHBOR_ALLGATHER_INIT_DEVICE_COLLECTIVE
             MPICH_NEIGHBOR_ALLGATHER_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Neighbor_allgather_init
        will allow the device to override the MPIR-level collective
        algorithms.  The device might still call the MPIR-level algorithms
        manually.  If set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_NEIGHBOR_ALLGATHERV_DEVICE_COLLECTIVE
    Aliases: MVP_NEIGHBOR_ALLGATHERV_DEVICE_COLLECTIVE
             MPICH_NEIGHBOR_ALLGATHERV_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Neighbor_allgatherv will
        allow the device to override the MPIR-level collective algorithms. 
        The device might still call the MPIR-level algorithms manually.  If
        set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_INEIGHBOR_ALLGATHERV_DEVICE_COLLECTIVE
    Aliases: MVP_INEIGHBOR_ALLGATHERV_DEVICE_COLLECTIVE
             MPICH_INEIGHBOR_ALLGATHERV_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Ineighbor_allgatherv will
        allow the device to override the MPIR-level collective algorithms. 
        The device might still call the MPIR-level algorithms manually.  If
        set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_NEIGHBOR_ALLGATHERV_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_NEIGHBOR_ALLGATHERV_INIT_DEVICE_COLLECTIVE
             MPICH_NEIGHBOR_ALLGATHERV_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Neighbor_allgatherv_init
        will allow the device to override the MPIR-level collective
        algorithms.  The device might still call the MPIR-level algorithms
        manually.  If set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_NEIGHBOR_ALLTOALL_DEVICE_COLLECTIVE
    Aliases: MVP_NEIGHBOR_ALLTOALL_DEVICE_COLLECTIVE
             MPICH_NEIGHBOR_ALLTOALL_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Neighbor_alltoall will
        allow the device to override the MPIR-level collective algorithms. 
        The device might still call the MPIR-level algorithms manually.  If
        set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_INEIGHBOR_ALLTOALL_DEVICE_COLLECTIVE
    Aliases: MVP_INEIGHBOR_ALLTOALL_DEVICE_COLLECTIVE
             MPICH_INEIGHBOR_ALLTOALL_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Ineighbor_alltoall will
        allow the device to override the MPIR-level collective algorithms. 
        The device might still call the MPIR-level algorithms manually.  If
        set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_NEIGHBOR_ALLTOALL_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_NEIGHBOR_ALLTOALL_INIT_DEVICE_COLLECTIVE
             MPICH_NEIGHBOR_ALLTOALL_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Neighbor_alltoall_init
        will allow the device to override the MPIR-level collective
        algorithms.  The device might still call the MPIR-level algorithms
        manually.  If set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_NEIGHBOR_ALLTOALLV_DEVICE_COLLECTIVE
    Aliases: MVP_NEIGHBOR_ALLTOALLV_DEVICE_COLLECTIVE
             MPICH_NEIGHBOR_ALLTOALLV_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Neighbor_alltoallv will
        allow the device to override the MPIR-level collective algorithms. 
        The device might still call the MPIR-level algorithms manually.  If
        set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_INEIGHBOR_ALLTOALLV_DEVICE_COLLECTIVE
    Aliases: MVP_INEIGHBOR_ALLTOALLV_DEVICE_COLLECTIVE
             MPICH_INEIGHBOR_ALLTOALLV_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Ineighbor_alltoallv will
        allow the device to override the MPIR-level collective algorithms. 
        The device might still call the MPIR-level algorithms manually.  If
        set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_NEIGHBOR_ALLTOALLV_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_NEIGHBOR_ALLTOALLV_INIT_DEVICE_COLLECTIVE
             MPICH_NEIGHBOR_ALLTOALLV_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Neighbor_alltoallv_init
        will allow the device to override the MPIR-level collective
        algorithms.  The device might still call the MPIR-level algorithms
        manually.  If set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_NEIGHBOR_ALLTOALLW_DEVICE_COLLECTIVE
    Aliases: MVP_NEIGHBOR_ALLTOALLW_DEVICE_COLLECTIVE
             MPICH_NEIGHBOR_ALLTOALLW_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Neighbor_alltoallw will
        allow the device to override the MPIR-level collective algorithms. 
        The device might still call the MPIR-level algorithms manually.  If
        set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_INEIGHBOR_ALLTOALLW_DEVICE_COLLECTIVE
    Aliases: MVP_INEIGHBOR_ALLTOALLW_DEVICE_COLLECTIVE
             MPICH_INEIGHBOR_ALLTOALLW_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Ineighbor_alltoallw will
        allow the device to override the MPIR-level collective algorithms. 
        The device might still call the MPIR-level algorithms manually.  If
        set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_NEIGHBOR_ALLTOALLW_INIT_DEVICE_COLLECTIVE
    Aliases: MVP_NEIGHBOR_ALLTOALLW_INIT_DEVICE_COLLECTIVE
             MPICH_NEIGHBOR_ALLTOALLW_INIT_DEVICE_COLLECTIVE
    Description: This CVAR is only used when MPIR_CVAR_DEVICE_COLLECTIVES
        is set to "percoll".  If set to true, MPI_Neighbor_alltoallw_init
        will allow the device to override the MPIR-level collective
        algorithms.  The device might still call the MPIR-level algorithms
        manually.  If set to false, the device-override will be disabled.
    Default: 1

MPIR_CVAR_COLL_HYBRID_MEMORY
    Aliases: MVP_COLL_HYBRID_MEMORY
             MPICH_COLL_HYBRID_MEMORY
    Description: This cvar indicates if the memory used in the collective
        operations are the same type. It set to true, it means in a
        collective operation, some buffers could be on the CPU and some
        buffers could be on the GPU. If set to false, it means all the data
        in a collective operation are on the same type of memory.
    Default: 1

MPIR_CVAR_GATHER_VSMALL_MSG_SIZE
    Aliases: MVP_GATHER_VSMALL_MSG_SIZE
             MPICH_GATHER_VSMALL_MSG_SIZE
    Description: use a temporary buffer for intracommunicator MPI_Gather if
        the send buffer size is < this value (in bytes) (See also:
        MPIR_CVAR_GATHER_INTER_SHORT_MSG_SIZE)
    Default: 1024

MPIR_CVAR_IALLTOALL_BRUCKS_KVAL
    Aliases: MVP_IALLTOALL_BRUCKS_KVAL
             MPICH_IALLTOALL_BRUCKS_KVAL
    Description: radix (k) value for generic transport brucks based
        ialltoall
    Default: 2

MPIR_CVAR_IALLTOALL_BRUCKS_BUFFER_PER_NBR
    Aliases: MVP_IALLTOALL_BRUCKS_BUFFER_PER_NBR
             MPICH_IALLTOALL_BRUCKS_BUFFER_PER_NBR
    Description: If set to true, the tsp based brucks algorithm will
        allocate dedicated send and receive buffers for every neighbor in
        the brucks algorithm. Otherwise, it would reuse a single buffer for
        sending and receiving data to/from neighbors
    Default: 0

MPIR_CVAR_IALLTOALL_SCATTERED_OUTSTANDING_TASKS
    Aliases: MVP_IALLTOALL_SCATTERED_OUTSTANDING_TASKS
             MPICH_IALLTOALL_SCATTERED_OUTSTANDING_TASKS
    Description: Maximum number of outstanding sends and recvs posted at a
        time
    Default: 64

MPIR_CVAR_IALLTOALL_SCATTERED_BATCH_SIZE
    Aliases: MVP_IALLTOALL_SCATTERED_BATCH_SIZE
             MPICH_IALLTOALL_SCATTERED_BATCH_SIZE
    Description: Number of send/receive tasks that scattered algorithm
        waits for completion before posting another batch of send/receives
        of that size
    Default: 4

MPIR_CVAR_BCAST_INTER_KNOMIAL_FACTOR
    Aliases: MVP_BCAST_INTER_KNOMIAL_FACTOR
             MPICH_BCAST_INTER_KNOMIAL_FACTOR
    Description: This defines the degree of the knomial operation during
        the inter-node knomial broadcast phase.
    Default: 4

MPIR_CVAR_BCAST_INTRA_KNOMIAL_FACTOR
    Aliases: MVP_BCAST_INTRA_KNOMIAL_FACTOR
             MPICH_BCAST_INTRA_KNOMIAL_FACTOR
    Description: This defines the degree of the knomial operation during
        the intra-node knomial broadcast phase.
    Default: 4

MPIR_CVAR_BCAST_SEGMENT_SIZE
    Aliases: MVP_BCAST_SEGMENT_SIZE
             MPICH_BCAST_SEGMENT_SIZE
    Description: Size of the segments used for PIPELINED bcast
    Default: 8192

MPIR_CVAR_REDUCE_INTER_KNOMIAL_FACTOR
    Aliases: MVP_REDUCE_INTER_KNOMIAL_FACTOR
             MPICH_REDUCE_INTER_KNOMIAL_FACTOR
    Description: This defines the degree of the knomial operation during
        the inter-node knomial reduce phase.
    Default: 4

MPIR_CVAR_REDUCE_INTRA_KNOMIAL_FACTOR
    Aliases: MVP_REDUCE_INTRA_KNOMIAL_FACTOR
             MPICH_REDUCE_INTRA_KNOMIAL_FACTOR
    Description: This defines the degree of the knomial operation during
        the intra-node knomial reduce phase.
    Default: 4

MPIR_CVAR_DEVICE_COLLECTIVES
    Aliases: MVP_DEVICE_COLLECTIVES
             MPICH_DEVICE_COLLECTIVES
    Description: Variable to select whether the device can override the
        MPIR-level collective algorithms.
        all     - Always prefer the device collectives
        none    - Never pick the device collectives
        percoll - Use the per-collective CVARs to decide
    Default: MPIR_CVAR_DEVICE_COLLECTIVES_percoll

MPIR_CVAR_COLLECTIVE_FALLBACK
    Aliases: MVP_COLLECTIVE_FALLBACK
             MPICH_COLLECTIVE_FALLBACK
    Description: Variable to control what the MPI library should do if the
        user-specified collective algorithm does not work for the
        arguments passed in by the user.
        error   - throw an error
        print   - print an error message and fallback to the internally
        selected algorithm
        silent  - silently fallback to the internally selected algorithm
    Default: MPIR_CVAR_COLLECTIVE_FALLBACK_silent

MPIR_CVAR_COLL_SELECTION_TUNING_JSON_FILE
    Aliases: MVP_COLL_SELECTION_TUNING_JSON_FILE
             MPICH_COLL_SELECTION_TUNING_JSON_FILE
    Description: Defines the location of tuning file.
    Default: ""

MPIR_CVAR_HIERARCHY_DUMP
    Aliases: MVP_HIERARCHY_DUMP
             MPICH_HIERARCHY_DUMP
    Description: If set to true, each rank will dump the hierarchy data
        structure to a file named "hierarchy[rank]" in the current folder.
        If set to false, the hierarchy data structure will not be dumped.
    Default: 0

MPIR_CVAR_COORDINATES_FILE
    Aliases: MVP_COORDINATES_FILE
             MPICH_COORDINATES_FILE
    Description: Defines the location of the input coordinates file.
    Default: ""

MPIR_CVAR_COLL_TREE_DUMP
    Aliases: MVP_COLL_TREE_DUMP
             MPICH_COLL_TREE_DUMP
    Description: If set to true, each rank will dump the tree to a file
        named "colltree[rank].json" in the current folder. If set to false,
        the tree will not be dumped.
    Default: 0

MPIR_CVAR_COORDINATES_DUMP
    Aliases: MVP_COORDINATES_DUMP
             MPICH_COORDINATES_DUMP
    Description: If set to true, rank 0 will dump the network coordinates
        to a file named "coords" in the current folder. If set to false,
        the network coordinates will not be dumped.
    Default: 0

MPIR_CVAR_PROGRESS_MAX_COLLS
    Aliases: MVP_PROGRESS_MAX_COLLS
             MPICH_PROGRESS_MAX_COLLS
    Description: Maximum number of collective operations at a time that the
        progress engine should make progress on
    Default: 0

MPIR_CVAR_COMM_SPLIT_USE_QSORT
    Aliases: MVP_COMM_SPLIT_USE_QSORT
             MPICH_COMM_SPLIT_USE_QSORT
    Description: Use qsort(3) in the implementation of MPI_Comm_split
        instead of bubble sort.
    Default: 1

MPIR_CVAR_CTXID_EAGER_SIZE
    Aliases: MVP_CTXID_EAGER_SIZE
             MPICH_CTXID_EAGER_SIZE
    Description: The MPIR_CVAR_CTXID_EAGER_SIZE environment variable allows
        you to specify how many words in the context ID mask will be set
        aside for the eager allocation protocol.  If the application is
        running out of context IDs, reducing this value may help.
    Default: 2

MPIR_CVAR_DATALOOP_FAST_SEEK
    Aliases: MVP_DATALOOP_FAST_SEEK
             MPICH_DATALOOP_FAST_SEEK
    Description: use a datatype-specialized algorithm to shortcut seeking
        to the correct location in a noncontiguous buffer
    Default: 1

MPIR_CVAR_YAKSA_COMPLEX_SUPPORT
    Aliases: MVP_YAKSA_COMPLEX_SUPPORT
             MPICH_YAKSA_COMPLEX_SUPPORT
    Description: This CVAR indicates that complex type reduction is not
        supported in yaksa.
    Default: 0

MPIR_CVAR_GPU_DOUBLE_SUPPORT
    Aliases: MVP_GPU_DOUBLE_SUPPORT
             MPICH_GPU_DOUBLE_SUPPORT
    Description: This CVAR indicates that double type is not supported on
        the GPU.
    Default: 0

MPIR_CVAR_GPU_LONG_DOUBLE_SUPPORT
    Aliases: MVP_GPU_LONG_DOUBLE_SUPPORT
             MPICH_GPU_LONG_DOUBLE_SUPPORT
    Description: This CVAR indicates that double type is not supported on
        the GPU.
    Default: 0

MPIR_CVAR_ENABLE_YAKSA_REDUCTION
    Aliases: MVP_ENABLE_YAKSA_REDUCTION
             MPICH_ENABLE_YAKSA_REDUCTION
    Description: This cvar enables yaksa based reduction for local reduce.
    Default: 1

MPIR_CVAR_YAKSA_REDUCTION_THRESHOLD
    Aliases: MVP_YAKSA_REDUCTION_THRESHOLD
             MPICH_YAKSA_REDUCTION_THRESHOLD
    Description: This cvar disables yaksa based reduction for messages
        above the threshold. The default is no limit.
    Default: -1

MPIR_CVAR_PROCTABLE_SIZE
    Aliases: MVP_PROCTABLE_SIZE
             MPICH_PROCTABLE_SIZE
    Description: Size of the "MPIR" debugger interface proctable (process
        table).
    Default: 64

MPIR_CVAR_PROCTABLE_PRINT
    Aliases: MVP_PROCTABLE_PRINT
             MPICH_PROCTABLE_PRINT
    Description: If true, dump the proctable entries at
        MPII_Wait_for_debugger-time.
    Default: 0

MPIR_CVAR_PRINT_ERROR_STACK
    Aliases: MVP_PRINT_ERROR_STACK
             MPICH_PRINT_ERROR_STACK
    Description: If true, print an error stack trace at error handling
        time.
    Default: 1

MPIR_CVAR_CHOP_ERROR_STACK
    Aliases: MVP_CHOP_ERROR_STACK
             MPICH_CHOP_ERROR_STACK
    Description: If >0, truncate error stack output lines this many
        characters wide.  If 0, do not truncate, and if <0 use a sensible
        default.
    Default: 0

MPIR_CVAR_ASYNC_PROGRESS
    Aliases: MVP_ASYNC_PROGRESS
             MPICH_ASYNC_PROGRESS
    Description: If set to true, MPICH will initiate an additional thread
        to make asynchronous progress on all communication operations
        including point-to-point, collective, one-sided operations and I/O.
         Setting this variable will automatically increase the
        thread-safety level to MPI_THREAD_MULTIPLE.  While this improves
        the progress semantics, it might cause a small amount of
        performance overhead for regular MPI operations.  The user is
        encouraged to leave one or more hardware threads vacant in order to
        prevent contention between the application threads and the progress
        thread(s).  The impact of oversubscription is highly system
        dependent but may be substantial in some cases, hence this
        recommendation.
    Default: 0

MPIR_CVAR_PROGRESS_THREAD_AFFINITY
    Aliases: MVP_PROGRESS_THREAD_AFFINITY
             MPICH_PROGRESS_THREAD_AFFINITY
    Description: Specifies affinity for all progress threads of local
        processes. Can be set to auto or comma-separated list of logical
        processors. When set to auto - MPICH will automatically select
        logical CPU cores to decide affinity of the progress threads. When
        set to comma-separated list of logical processors - In case of N
        progress threads per process, the first N logical processors from
        list will be assigned to threads of first local process, the next N
        logical processors from list - to second local process and so on.
        For example, thread affinity is "0,1,2,3", 2 progress threads per
        process and 2 processes per node. Progress threads of first local
        process will be pinned on logical processors "0,1", progress
        threads of second local process - on "2,3". Cannot work together
        with MPIR_CVAR_NUM_CLIQUES or MPIR_CVAR_ODD_EVEN_CLIQUES.
    Default: ""

MPIR_CVAR_SUPPRESS_ABORT_MESSAGE
    Aliases: MVP_SUPPRESS_ABORT_MESSAGE
             MPICH_SUPPRESS_ABORT_MESSAGE
    Description: Disable printing of abort error message.
    Default: 0

MPIR_CVAR_COREDUMP_ON_ABORT
    Aliases: MVP_COREDUMP_ON_ABORT
             MPICH_COREDUMP_ON_ABORT
    Description: Call libc abort() to generate a corefile
    Default: 0

MPIR_CVAR_ERROR_CHECKING
    Aliases: MVP_ERROR_CHECKING
             MPICH_ERROR_CHECKING
    Description: If true, perform checks for errors, typically to verify
        valid inputs to MPI routines.  Only effective when MPICH is
        configured with --enable-error-checking=runtime .
    Default: 1

MPIR_CVAR_MEMDUMP
    Aliases: MVP_MEMDUMP
             MPICH_MEMDUMP
    Description: If true, list any memory that was allocated by MPICH and
        that remains allocated when MPI_Finalize completes.
    Default: 1

MPIR_CVAR_DEBUG_SUMMARY
    Aliases: MVP_DEBUG_SUMMARY
             MPICH_DEBUG_SUMMARY
             MPIR_CVAR_MEM_CATEGORY_INFORMATION
             MPIR_CVAR_CH4_OFI_CAPABILITY_SETS_DEBUG
             MPIR_CVAR_CH4_UCX_CAPABILITY_DEBUG
             MVP_MEM_CATEGORY_INFORMATION
             MVP_CH4_OFI_CAPABILITY_SETS_DEBUG
             MVP_CH4_UCX_CAPABILITY_DEBUG
             MPICH_MEM_CATEGORY_INFORMATION
             MPICH_CH4_OFI_CAPABILITY_SETS_DEBUG
             MPICH_CH4_UCX_CAPABILITY_DEBUG
    Description: 1: Print internal summary of various debug information,
        such as memory allocation by category. Each layer may print their
        own summary information. For example, ch4-ofi may print its
        provider capability settings. 2: Also print the preferred NIC for
        each rank
    Default: 0

MPIR_CVAR_DEFAULT_THREAD_LEVEL
    Aliases: MVP_DEFAULT_THREAD_LEVEL
             MPICH_DEFAULT_THREAD_LEVEL
    Description: Sets the default thread level to use when using MPI_INIT.
        This variable is case-insensitive.
    Default: "MPI_THREAD_SINGLE"

MPIR_CVAR_DEBUG_HOLD
    Aliases: MVP_DEBUG_HOLD
             MPICH_DEBUG_HOLD
    Description: If true, causes processes to wait in MPI_Init and
        MPI_Initthread for a debugger to be attached.  Once the debugger
        has attached, the variable 'hold' should be set to 0 in order to
        allow the process to continue (e.g., in gdb, "set hold=0").
    Default: 0

MPIR_CVAR_GPU_USE_IMMEDIATE_COMMAND_LIST
    Aliases: MVP_GPU_USE_IMMEDIATE_COMMAND_LIST
             MPICH_GPU_USE_IMMEDIATE_COMMAND_LIST
    Description: If true, mpl/ze will use immediate command list for
        copying
    Default: 0

MPIR_CVAR_GPU_ROUND_ROBIN_COMMAND_QUEUES
    Aliases: MVP_GPU_ROUND_ROBIN_COMMAND_QUEUES
             MPICH_GPU_ROUND_ROBIN_COMMAND_QUEUES
    Description: If true, mpl/ze will use command queues in a round-robin
        fashion. If false, only command queues of index 0 will be used.
    Default: 0

MPIR_CVAR_NO_COLLECTIVE_FINALIZE
    Aliases: MVP_NO_COLLECTIVE_FINALIZE
             MPICH_NO_COLLECTIVE_FINALIZE
    Description: If true, prevent MPI_Finalize to invoke collective
        behavior such as barrier or communicating to other processes.
        Consequently, it may result in leaking memory or losing messages
        due to pre-mature exiting. The default is false, which may invoke
        collective behaviors at finalize.
    Default: 0

MPIR_CVAR_FINALIZE_WAIT
    Aliases: MVP_FINALIZE_WAIT
             MPICH_FINALIZE_WAIT
    Description: If true, poll progress at MPI_Finalize until reference
        count on MPI_COMM_WORLD and MPI_COMM_SELF reaches zero. This may be
        necessary to prevent remote processes hanging if it has pending
        communication protocols, e.g. a rendezvous send.
    Default: 0

MPIR_CVAR_INIT_SKIP_PMI_BARRIER
    Aliases: MVP_INIT_SKIP_PMI_BARRIER
             MPICH_INIT_SKIP_PMI_BARRIER
    Description: Skip MPIR_pmi_barrier() in MPI_Init
    Default: 1

MPIR_CVAR_GPU_FAST_COPY_MAX_SIZE
    Aliases: MVP_GPU_FAST_COPY_MAX_SIZE
             MPICH_GPU_FAST_COPY_MAX_SIZE
    Description: If a send message size is less than or equal to
        MPIR_CVAR_GPU_FAST_COPY_MAX_SIZE (in bytes), then enable GPU-based
        fast memcpy. The environment variable is valid only when then GPU
        IPC shmmod is enabled.
    Default: 4096

MPIR_CVAR_GPU_FAST_COPY_MAX_SIZE_H2D
    Aliases: MVP_GPU_FAST_COPY_MAX_SIZE_H2D
             MPICH_GPU_FAST_COPY_MAX_SIZE_H2D
    Description: If a receive message size is less than or equal to
        MPIR_CVAR_GPU_FAST_COPY_MAX_SIZE_H2D (in bytes), then enable
        GPU-based fast memcpy.
    Default: 1048576

MPIR_CVAR_GPU_FAST_COPY_MAX_SIZE_D2H
    Aliases: MVP_GPU_FAST_COPY_MAX_SIZE_D2H
             MPICH_GPU_FAST_COPY_MAX_SIZE_D2H
    Description: If a send message size is less than or equal to
        MPIR_CVAR_GPU_FAST_COPY_MAX_SIZE_D2H (in bytes), then enable
        GPU-based fast memcpy.
    Default: 32768

MPIR_CVAR_REQUEST_ERR_FATAL
    Aliases: MVP_REQUEST_ERR_FATAL
             MPICH_REQUEST_ERR_FATAL
    Description: By default, MPI_Waitall, MPI_Testall, MPI_Waitsome, and
        MPI_Testsome return MPI_ERR_IN_STATUS when one of the request
        fails. If MPIR_CVAR_REQUEST_ERR_FATAL is set to true, these
        routines will return the error code of the request immediately. The
        default MPI_ERRS_ARE_FATAL error handler will dump a error stack in
        this case, which maybe more convenient for debugging. This cvar
        will also make nonblocking shched return error right away as it
        issues operations.
    Default: 0

MPIR_CVAR_REQUEST_POLL_FREQ
    Aliases: MVP_REQUEST_POLL_FREQ
             MPICH_REQUEST_POLL_FREQ
    Description: How frequent to poll during MPI_{Waitany,Waitsome} in
        terms of number of processed requests before polling.
    Default: 8

MPIR_CVAR_REQUEST_BATCH_SIZE
    Aliases: MVP_REQUEST_BATCH_SIZE
             MPICH_REQUEST_BATCH_SIZE
    Description: The number of requests to make completion as a batch in
        MPI_Waitall and MPI_Testall implementation. A large number is
        likely to cause more cache misses.
    Default: 64

MPIR_CVAR_DEBUG_PROGRESS_TIMEOUT
    Aliases: MVP_DEBUG_PROGRESS_TIMEOUT
             MPICH_DEBUG_PROGRESS_TIMEOUT
    Description: Sets the timeout in seconds to dump outstanding requests
        when progress wait is not making progress for some time.
    Default: 0

MPIR_CVAR_DIMS_VERBOSE
    Aliases: MVP_DIMS_VERBOSE
             MPICH_DIMS_VERBOSE
    Description: If true, enable verbose output about the actions of the
        implementation of MPI_Dims_create.
    Default: 0

MPIR_CVAR_QMPI_TOOL_LIST
    Aliases: MVP_QMPI_TOOL_LIST
             MPICH_QMPI_TOOL_LIST
    Description: Set the number and order of QMPI tools to be loaded by the
        MPI library when it is initialized.
    Default: NULL

MPIR_CVAR_NAMESERV_FILE_PUBDIR
    Aliases: MVP_NAMESERV_FILE_PUBDIR
             MPICH_NAMESERV_FILE_PUBDIR
             MPIR_CVAR_NAMEPUB_DIR
             MVP_NAMEPUB_DIR
             MPICH_NAMEPUB_DIR
    Description: Sets the directory to use for MPI service publishing in
        the file nameserv implementation.  Allows the user to override
        where the publish and lookup information is placed for
        connect/accept based applications.
    Default: NULL

MPIR_CVAR_ABORT_ON_LEAKED_HANDLES
    Aliases: MVP_ABORT_ON_LEAKED_HANDLES
             MPICH_ABORT_ON_LEAKED_HANDLES
    Description: If true, MPI will call MPI_Abort at MPI_Finalize if any
        MPI object handles have been leaked.  For example, if MPI_Comm_dup
        is called without calling a corresponding MPI_Comm_free.  For
        uninteresting reasons, enabling this option may prevent all known
        object leaks from being reported.  MPICH must have been configure
        with "--enable-g=handlealloc" or better in order for this
        functionality to work.
    Default: 0

MPIR_CVAR_NETLOC_NODE_FILE
    Aliases: MVP_NETLOC_NODE_FILE
             MPICH_NETLOC_NODE_FILE
    Description: Subnet json file
    Default: "auto"

MPIR_CVAR_NOLOCAL
    Aliases: MVP_NOLOCAL
             MPICH_NOLOCAL
             MPIR_CVAR_NO_LOCAL
             MVP_NO_LOCAL
             MPICH_NO_LOCAL
    Description: If true, force all processes to operate as though all
        processes are located on another node.  For example, this disables
        shared memory communication hierarchical collectives.
    Default: 0

MPIR_CVAR_ODD_EVEN_CLIQUES
    Aliases: MVP_ODD_EVEN_CLIQUES
             MPICH_ODD_EVEN_CLIQUES
             MPIR_CVAR_EVEN_ODD_CLIQUES
             MVP_EVEN_ODD_CLIQUES
             MPICH_EVEN_ODD_CLIQUES
    Description: If true, odd procs on a node are seen as local to each
        other, and even procs on a node are seen as local to each other. 
        Used for debugging on a single machine. Deprecated in favor of
        MPIR_CVAR_NUM_CLIQUES.
    Default: 0

MPIR_CVAR_NUM_CLIQUES
    Aliases: MVP_NUM_CLIQUES
             MPICH_NUM_CLIQUES
    Description: Specify the number of cliques that should be used to
        partition procs on a local node. Procs with the same clique number
        are seen as local to each other. Used for debugging on a single
        machine.
    Default: 1

MPIR_CVAR_CLIQUES_BY_BLOCK
    Aliases: MVP_CLIQUES_BY_BLOCK
             MPICH_CLIQUES_BY_BLOCK
    Description: Specify to divide processes into cliques by uniform
        blocks. The default is to divide in round-robin fashion. Used for
        debugging on a single machine.
    Default: 0

MPIR_CVAR_PMI_VERSION
    Aliases: MVP_PMI_VERSION
             MPICH_PMI_VERSION
    Description: Variable to select runtime PMI version.
        1        - PMI (default)
        2        - PMI2
        x        - PMIx
    Default: MPIR_CVAR_PMI_VERSION_1

MPIR_CVAR_COLL_ALIAS_CHECK
    Aliases: MVP_COLL_ALIAS_CHECK
             MPICH_COLL_ALIAS_CHECK
    Description: Enable checking of aliasing in collective operations
    Default: 1

MPIR_CVAR_ENABLE_GPU
    Aliases: MVP_ENABLE_GPU
             MPICH_ENABLE_GPU
    Description: Control MPICH GPU support. If set to 0, all GPU support is
        disabled and we do not query the buffer type internally because we
        assume no GPU buffer is use.
    Default: 1

MPIR_CVAR_GPU_HAS_WAIT_KERNEL
    Aliases: MVP_GPU_HAS_WAIT_KERNEL
             MPICH_GPU_HAS_WAIT_KERNEL
    Description: If set to 1, avoid allocate allocating GPU registered host
        buffers for temporary buffers. When stream workq and GPU wait
        kernels are in use, access APIs for GPU registered memory may cause
        deadlock.
    Default: 0

MPIR_CVAR_ENABLE_GPU_REGISTER
    Aliases: MVP_ENABLE_GPU_REGISTER
             MPICH_ENABLE_GPU_REGISTER
    Description: Control whether to actually register buffers with the GPU
        runtime in MPIR_gpu_register_host. This could lower the latency of
        certain GPU communication at the cost of some amount of GPU memory
        consumed by the MPI library. By default, registration is enabled.
    Default: 1

MPIR_CVAR_LMEM_POOL_SIZE
    Aliases: MVP_LMEM_POOL_SIZE
             MPICH_LMEM_POOL_SIZE
    Description: Sets the amount of space allocated at init time to be used
        by internal functions for local temp buffers.
    Default: 32 * 1024 * 1024

MPIR_CVAR_POLLS_BEFORE_YIELD
    Aliases: MVP_POLLS_BEFORE_YIELD
             MPICH_POLLS_BEFORE_YIELD
    Description: When MPICH is in a busy waiting loop, it will periodically
        call a function to yield the processor.  This cvar sets the number
        of loops before the yield function is called.  A value of 0
        disables yielding.
    Default: 1000

MPIR_CVAR_CH3_INTERFACE_HOSTNAME
    Aliases: MVP_CH3_INTERFACE_HOSTNAME
             MPICH_CH3_INTERFACE_HOSTNAME
             MPIR_CVAR_INTERFACE_HOSTNAME
             MVP_INTERFACE_HOSTNAME
             MPICH_INTERFACE_HOSTNAME
    Description: If non-NULL, this cvar specifies the IP address that other
        processes should use when connecting to this process. This cvar is
        mutually exclusive with the MPIR_CVAR_CH3_NETWORK_IFACE cvar and it
        is an error to set them both.
    Default: NULL

MPIR_CVAR_CH3_PORT_RANGE
    Aliases: MVP_CH3_PORT_RANGE
             MPICH_CH3_PORT_RANGE
             MPIR_CVAR_PORTRANGE
             MPIR_CVAR_PORT_RANGE
             MVP_PORTRANGE
             MVP_PORT_RANGE
             MPICH_PORTRANGE
             MPICH_PORT_RANGE
    Description: The MPIR_CVAR_CH3_PORT_RANGE environment variable allows
        you to specify the range of TCP ports to be used by the process
        manager and the MPICH library. The format of this variable is
        <low>:<high>.  To specify any available port, use 0:0.
    Default: {0,0}

MPIR_CVAR_NEMESIS_TCP_NETWORK_IFACE
    Aliases: MVP_NEMESIS_TCP_NETWORK_IFACE
             MPICH_NEMESIS_TCP_NETWORK_IFACE
             MPIR_CVAR_NETWORK_IFACE
             MVP_NETWORK_IFACE
             MPICH_NETWORK_IFACE
    Description: If non-NULL, this cvar specifies which pseudo-ethernet
        interface the tcp netmod should use (e.g., "eth1", "ib0"). Note,
        this is a Linux-specific cvar. This cvar is mutually exclusive with
        the MPIR_CVAR_CH3_INTERFACE_HOSTNAME cvar and it is an error to set
        them both.
    Default: NULL

MPIR_CVAR_NEMESIS_TCP_HOST_LOOKUP_RETRIES
    Aliases: MVP_NEMESIS_TCP_HOST_LOOKUP_RETRIES
             MPICH_NEMESIS_TCP_HOST_LOOKUP_RETRIES
    Description: This cvar controls the number of times to retry the
        gethostbyname() function before giving up.
    Default: 10

MPIR_CVAR_NEMESIS_ENABLE_CKPOINT
    Aliases: MVP_NEMESIS_ENABLE_CKPOINT
             MPICH_NEMESIS_ENABLE_CKPOINT
    Description: If true, enables checkpointing support and returns an
        error if checkpointing library cannot be initialized.
    Default: 0

MPIR_CVAR_NEMESIS_SHM_EAGER_MAX_SZ
    Aliases: MVP_NEMESIS_SHM_EAGER_MAX_SZ
             MPICH_NEMESIS_SHM_EAGER_MAX_SZ
    Description: This cvar controls the message size at which Nemesis
        switches from eager to rendezvous mode for shared memory. If this
        cvar is set to -1, then Nemesis will choose an appropriate value.
    Default: -1

MPIR_CVAR_NEMESIS_SHM_READY_EAGER_MAX_SZ
    Aliases: MVP_NEMESIS_SHM_READY_EAGER_MAX_SZ
             MPICH_NEMESIS_SHM_READY_EAGER_MAX_SZ
    Description: This cvar controls the message size at which Nemesis
        switches from eager to rendezvous mode for ready-send messages.  If
        this cvar is set to -1, then ready messages will always be sent
        eagerly.  If this cvar is set to -2, then Nemesis will choose an
        appropriate value.
    Default: -2

MPIR_CVAR_ENABLE_FT
    Aliases: MVP_ENABLE_FT
             MPICH_ENABLE_FT
    Description: Enable fault tolerance functions
    Default: 0

MPIR_CVAR_NEMESIS_NETMOD
    Aliases: MVP_NEMESIS_NETMOD
             MPICH_NEMESIS_NETMOD
    Description: If non-empty, this cvar specifies which network module
        should be used for communication. This variable is
        case-insensitive.
    Default: ""

MPIR_CVAR_CH3_ENABLE_HCOLL
    Aliases: MVP_CH3_ENABLE_HCOLL
             MPICH_CH3_ENABLE_HCOLL
    Description: If true, enable HCOLL collectives.
    Default: 0

MPIR_CVAR_CH3_COMM_CONNECT_TIMEOUT
    Aliases: MVP_CH3_COMM_CONNECT_TIMEOUT
             MPICH_CH3_COMM_CONNECT_TIMEOUT
    Description: The default time out period in seconds for a connection
        attempt to the server communicator where the named port exists but
        no pending accept. User can change the value for a specified
        connection through its info argument.
    Default: 180

MPIR_CVAR_CH3_RMA_OP_PIGGYBACK_LOCK_DATA_SIZE
    Aliases: MVP_CH3_RMA_OP_PIGGYBACK_LOCK_DATA_SIZE
             MPICH_CH3_RMA_OP_PIGGYBACK_LOCK_DATA_SIZE
    Description: Specify the threshold of data size of a RMA operation
        which can be piggybacked with a LOCK message. It is always a
        positive value and should not be smaller than
        MPIDI_RMA_IMMED_BYTES. If user sets it as a small value, for middle
        and large data size, we will lose performance because of always
        waiting for round-trip of LOCK synchronization; if user sets it as
        a large value, we need to consume more memory on target side to
        buffer this lock request when lock is not satisfied.
    Default: 65536

MPIR_CVAR_CH3_RMA_ACTIVE_REQ_THRESHOLD
    Aliases: MVP_CH3_RMA_ACTIVE_REQ_THRESHOLD
             MPICH_CH3_RMA_ACTIVE_REQ_THRESHOLD
    Description: Threshold of number of active requests to trigger blocking
        waiting in operation routines. When the value is negative, we never
        blockingly wait in operation routines. When the value is zero, we
        always trigger blocking waiting in operation routines to wait until
        no. of active requests becomes zero. When the value is positive, we
        do blocking waiting in operation routines to wait until no. of
        active requests being reduced to this value.
    Default: 65536

MPIR_CVAR_CH3_RMA_POKE_PROGRESS_REQ_THRESHOLD
    Aliases: MVP_CH3_RMA_POKE_PROGRESS_REQ_THRESHOLD
             MPICH_CH3_RMA_POKE_PROGRESS_REQ_THRESHOLD
    Description: Threshold at which the RMA implementation attempts to
        complete requests while completing RMA operations and while using
        the lazy synchronization approach.  Change this value if programs
        fail because they run out of requests or other internal resources
    Default: 128

MPIR_CVAR_CH3_RMA_SCALABLE_FENCE_PROCESS_NUM
    Aliases: MVP_CH3_RMA_SCALABLE_FENCE_PROCESS_NUM
             MPICH_CH3_RMA_SCALABLE_FENCE_PROCESS_NUM
    Description: Specify the threshold of switching the algorithm used in
        FENCE from the basic algorithm to the scalable algorithm. The value
        can be negative, zero or positive. When the number of processes is
        larger than or equal to this value, FENCE will use a scalable
        algorithm which do not use O(P) data structure; when the number of
        processes is smaller than the value, FENCE will use a basic but
        fast algorithm which requires an O(P) data structure.
    Default: 1024

MPIR_CVAR_CH3_RMA_DELAY_ISSUING_FOR_PIGGYBACKING
    Aliases: MVP_CH3_RMA_DELAY_ISSUING_FOR_PIGGYBACKING
             MPICH_CH3_RMA_DELAY_ISSUING_FOR_PIGGYBACKING
    Description: Specify if delay issuing of RMA operations for
        piggybacking LOCK/UNLOCK/FLUSH is enabled. It can be either 0 or 1.
        When it is set to 1, the issuing of LOCK message is delayed until
        origin process see the first RMA operation and piggyback LOCK with
        that operation, and the origin process always keeps the current
        last operation until the ending synchronization call in order to
        piggyback UNLOCK/FLUSH with that operation. When it is set to 0, in
        WIN_LOCK/UNLOCK case, the LOCK message is sent out as early as
        possible, in WIN_LOCK_ALL/UNLOCK_ALL case, the origin process still
        tries to piggyback LOCK message with the first operation; for
        UNLOCK/FLUSH message, the origin process no longer keeps the
        current last operation but only piggyback UNLOCK/FLUSH if there is
        an operation available in the ending synchronization call.
    Default: 0

MPIR_CVAR_CH3_RMA_SLOTS_SIZE
    Aliases: MVP_CH3_RMA_SLOTS_SIZE
             MPICH_CH3_RMA_SLOTS_SIZE
    Description: Number of RMA slots during window creation. Each slot
        contains a linked list of target elements. The distribution of
        ranks among slots follows a round-robin pattern. Requires a
        positive value.
    Default: 262144

MPIR_CVAR_CH3_RMA_TARGET_LOCK_DATA_BYTES
    Aliases: MVP_CH3_RMA_TARGET_LOCK_DATA_BYTES
             MPICH_CH3_RMA_TARGET_LOCK_DATA_BYTES
    Description: Size (in bytes) of available lock data this window can
        provided. If current buffered lock data is more than this value,
        the process will drop the upcoming operation data. Requires a
        positive value.
    Default: 655360

MPIR_CVAR_CH3_EAGER_MAX_MSG_SIZE
    Aliases: MVP_CH3_EAGER_MAX_MSG_SIZE
             MPICH_CH3_EAGER_MAX_MSG_SIZE
    Description: This cvar controls the message size at which CH3 switches
        from eager to rendezvous mode.
    Default: 131072

MPIR_CVAR_CH3_PG_VERBOSE
    Aliases: MVP_CH3_PG_VERBOSE
             MPICH_CH3_PG_VERBOSE
    Description: If set, print the PG state on finalize.
    Default: 0

MPIR_CVAR_CH3_RMA_OP_WIN_POOL_SIZE
    Aliases: MVP_CH3_RMA_OP_WIN_POOL_SIZE
             MPICH_CH3_RMA_OP_WIN_POOL_SIZE
    Description: Size of the window-private RMA operations pool (in number
        of operations) that stores information about RMA operations that
        could not be issued immediately.  Requires a positive value.
    Default: 256

MPIR_CVAR_CH3_RMA_OP_GLOBAL_POOL_SIZE
    Aliases: MVP_CH3_RMA_OP_GLOBAL_POOL_SIZE
             MPICH_CH3_RMA_OP_GLOBAL_POOL_SIZE
    Description: Size of the Global RMA operations pool (in number of
        operations) that stores information about RMA operations that could
        not be issued immediately.  Requires a positive value.
    Default: 16384

MPIR_CVAR_CH3_RMA_TARGET_WIN_POOL_SIZE
    Aliases: MVP_CH3_RMA_TARGET_WIN_POOL_SIZE
             MPICH_CH3_RMA_TARGET_WIN_POOL_SIZE
    Description: Size of the window-private RMA target pool (in number of
        targets) that stores information about RMA targets that could not
        be issued immediately.  Requires a positive value.
    Default: 256

MPIR_CVAR_CH3_RMA_TARGET_GLOBAL_POOL_SIZE
    Aliases: MVP_CH3_RMA_TARGET_GLOBAL_POOL_SIZE
             MPICH_CH3_RMA_TARGET_GLOBAL_POOL_SIZE
    Description: Size of the Global RMA targets pool (in number of targets)
        that stores information about RMA targets that could not be issued
        immediately.  Requires a positive value.
    Default: 16384

MPIR_CVAR_CH3_RMA_TARGET_LOCK_ENTRY_WIN_POOL_SIZE
    Aliases: MVP_CH3_RMA_TARGET_LOCK_ENTRY_WIN_POOL_SIZE
             MPICH_CH3_RMA_TARGET_LOCK_ENTRY_WIN_POOL_SIZE
    Description: Size of the window-private RMA lock entries pool (in
        number of lock entries) that stores information about RMA lock
        requests that could not be satisfied immediately.  Requires a
        positive value.
    Default: 256

MPIR_CVAR_OFI_USE_PROVIDER
    Aliases: MVP_OFI_USE_PROVIDER
             MPICH_OFI_USE_PROVIDER
    Description: This variable is no longer supported. Use FI_PROVIDER
        instead to select libfabric providers.
    Default: NULL

MPIR_CVAR_SINGLE_HOST_ENABLED
    Aliases: MVP_SINGLE_HOST_ENABLED
             MPICH_SINGLE_HOST_ENABLED
    Description: Set this variable to true to indicate that processes are
        launched on a single host. The current implication is to avoid the
        cxi provider to prevent the use of scarce hardware resources.
    Default: 1

MPIR_CVAR_CH4_OFI_AM_LONG_FORCE_PIPELINE
    Aliases: MVP_CH4_OFI_AM_LONG_FORCE_PIPELINE
             MPICH_CH4_OFI_AM_LONG_FORCE_PIPELINE
    Description: For long message to be sent using pipeline rather than
        default RDMA read.
    Default: 0

MPIR_CVAR_BCAST_OFI_INTRA_ALGORITHM
    Aliases: MVP_BCAST_OFI_INTRA_ALGORITHM
             MPICH_BCAST_OFI_INTRA_ALGORITHM
    Description: Variable to select algorithm for intra-node bcast
        mpir                        - Fallback to MPIR collectives
        trigger_tree_tagged         - Force triggered ops based Tagged Tree
        trigger_tree_rma            - Force triggered ops based RMA Tree
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_CH4_OFI_COLL_SELECTION_TUNING_JSON_FILE)
    Default: MPIR_CVAR_BCAST_OFI_INTRA_ALGORITHM_auto

MPIR_CVAR_CH4_OFI_GPU_RECEIVE_ENGINE_TYPE
    Aliases: MVP_CH4_OFI_GPU_RECEIVE_ENGINE_TYPE
             MPICH_CH4_OFI_GPU_RECEIVE_ENGINE_TYPE
    Description: Specifies GPU engine type for GPU pt2pt on the receiver
        side.
        compute - use a compute engine
        copy_high_bandwidth - use a high-bandwidth copy engine
        copy_low_latency - use a low-latency copy engine
        yaksa - use Yaksa
    Default: MPIR_CVAR_CH4_OFI_GPU_RECEIVE_ENGINE_TYPE_copy_low_latency

MPIR_CVAR_OFI_SKIP_IPV6
    Aliases: MVP_OFI_SKIP_IPV6
             MPICH_OFI_SKIP_IPV6
    Description: Skip IPv6 providers.
    Default: 0

MPIR_CVAR_CH4_OFI_ENABLE_DATA
    Aliases: MVP_CH4_OFI_ENABLE_DATA
             MPICH_CH4_OFI_ENABLE_DATA
    Description: Enable immediate data fields in OFI to transmit source
        rank outside of the match bits
    Default: -1

MPIR_CVAR_CH4_OFI_ENABLE_AV_TABLE
    Aliases: MVP_CH4_OFI_ENABLE_AV_TABLE
             MPICH_CH4_OFI_ENABLE_AV_TABLE
    Description: If true, the OFI addressing information will be stored
        with an FI_AV_TABLE. If false, an FI_AV_MAP will be used.
    Default: -1

MPIR_CVAR_CH4_OFI_ENABLE_SCALABLE_ENDPOINTS
    Aliases: MVP_CH4_OFI_ENABLE_SCALABLE_ENDPOINTS
             MPICH_CH4_OFI_ENABLE_SCALABLE_ENDPOINTS
    Description: If true, use OFI scalable endpoints.
    Default: -1

MPIR_CVAR_CH4_OFI_ENABLE_SHARED_CONTEXTS
    Aliases: MVP_CH4_OFI_ENABLE_SHARED_CONTEXTS
             MPICH_CH4_OFI_ENABLE_SHARED_CONTEXTS
    Description: If set to false (zero), MPICH does not use OFI shared
        contexts. If set to -1, it is determined by the OFI capability sets
        based on the provider. Otherwise, MPICH tries to use OFI shared
        contexts. If they are unavailable, it'll fall back to the mode
        without shared contexts.
    Default: 0

MPIR_CVAR_CH4_OFI_ENABLE_MR_VIRT_ADDRESS
    Aliases: MVP_CH4_OFI_ENABLE_MR_VIRT_ADDRESS
             MPICH_CH4_OFI_ENABLE_MR_VIRT_ADDRESS
    Description: If true, enable virtual addressing for OFI memory regions.
        This variable is only meaningful for OFI versions 1.5+. It is
        equivalent to using FI_MR_BASIC in versions of OFI older than 1.5.
    Default: -1

MPIR_CVAR_CH4_OFI_ENABLE_MR_ALLOCATED
    Aliases: MVP_CH4_OFI_ENABLE_MR_ALLOCATED
             MPICH_CH4_OFI_ENABLE_MR_ALLOCATED
    Description: If true, require all OFI memory regions must be backed by
        physical memory pages at the time the registration call is made.
        This variable is only meaningful for OFI versions 1.5+. It is
        equivalent to using FI_MR_BASIC in versions of OFI older than 1.5.
    Default: -1

MPIR_CVAR_CH4_OFI_ENABLE_MR_REGISTER_NULL
    Aliases: MVP_CH4_OFI_ENABLE_MR_REGISTER_NULL
             MPICH_CH4_OFI_ENABLE_MR_REGISTER_NULL
    Description: If true, memory registration call supports registering
        with NULL addresses.
    Default: -1

MPIR_CVAR_CH4_OFI_ENABLE_MR_PROV_KEY
    Aliases: MVP_CH4_OFI_ENABLE_MR_PROV_KEY
             MPICH_CH4_OFI_ENABLE_MR_PROV_KEY
    Description: If true, enable provider supplied key for OFI memory
        regions. This variable is only meaningful for OFI versions 1.5+. It
        is equivalent to using FI_MR_BASIC in versions of OFI older than
        1.5.
    Default: -1

MPIR_CVAR_CH4_OFI_ENABLE_TAGGED
    Aliases: MVP_CH4_OFI_ENABLE_TAGGED
             MPICH_CH4_OFI_ENABLE_TAGGED
    Description: If true, use tagged message transmission functions in OFI.
    Default: -1

MPIR_CVAR_CH4_OFI_ENABLE_AM
    Aliases: MVP_CH4_OFI_ENABLE_AM
             MPICH_CH4_OFI_ENABLE_AM
    Description: If true, enable OFI active message support.
    Default: -1

MPIR_CVAR_CH4_OFI_ENABLE_RMA
    Aliases: MVP_CH4_OFI_ENABLE_RMA
             MPICH_CH4_OFI_ENABLE_RMA
    Description: If true, enable OFI RMA support for MPI RMA operations.
        OFI support for basic RMA is always required to implement large
        messgage transfers in the active message code path.
    Default: -1

MPIR_CVAR_CH4_OFI_ENABLE_ATOMICS
    Aliases: MVP_CH4_OFI_ENABLE_ATOMICS
             MPICH_CH4_OFI_ENABLE_ATOMICS
    Description: If true, enable OFI Atomics support.
    Default: -1

MPIR_CVAR_CH4_OFI_FETCH_ATOMIC_IOVECS
    Aliases: MVP_CH4_OFI_FETCH_ATOMIC_IOVECS
             MPICH_CH4_OFI_FETCH_ATOMIC_IOVECS
    Description: Specifies the maximum number of iovecs that can be used by
        the OFI provider for fetch_atomic operations. The default value is
        -1, indicating that no value is set.
    Default: -1

MPIR_CVAR_CH4_OFI_ENABLE_DATA_AUTO_PROGRESS
    Aliases: MVP_CH4_OFI_ENABLE_DATA_AUTO_PROGRESS
             MPICH_CH4_OFI_ENABLE_DATA_AUTO_PROGRESS
    Description: If true, enable MPI data auto progress.
    Default: -1

MPIR_CVAR_CH4_OFI_ENABLE_CONTROL_AUTO_PROGRESS
    Aliases: MVP_CH4_OFI_ENABLE_CONTROL_AUTO_PROGRESS
             MPICH_CH4_OFI_ENABLE_CONTROL_AUTO_PROGRESS
    Description: If true, enable MPI control auto progress.
    Default: -1

MPIR_CVAR_CH4_OFI_ENABLE_PT2PT_NOPACK
    Aliases: MVP_CH4_OFI_ENABLE_PT2PT_NOPACK
             MPICH_CH4_OFI_ENABLE_PT2PT_NOPACK
    Description: If true, enable iovec for pt2pt.
    Default: -1

MPIR_CVAR_CH4_OFI_ENABLE_HMEM
    Aliases: MVP_CH4_OFI_ENABLE_HMEM
             MPICH_CH4_OFI_ENABLE_HMEM
    Description: If true, uses GPU direct RDMA support in the provider.
    Default: 0

MPIR_CVAR_CH4_OFI_ENABLE_MR_HMEM
    Aliases: MVP_CH4_OFI_ENABLE_MR_HMEM
             MPICH_CH4_OFI_ENABLE_MR_HMEM
    Description: If true, need to register the buffer to use GPU direct
        RDMA.
    Default: -1

MPIR_CVAR_CH4_OFI_GPU_RDMA_THRESHOLD
    Aliases: MVP_CH4_OFI_GPU_RDMA_THRESHOLD
             MPICH_CH4_OFI_GPU_RDMA_THRESHOLD
    Description: The threshold to start using GPU direct RDMA.
    Default: 0

MPIR_CVAR_CH4_OFI_CONTEXT_ID_BITS
    Aliases: MVP_CH4_OFI_CONTEXT_ID_BITS
             MPICH_CH4_OFI_CONTEXT_ID_BITS
    Description: Specifies the number of bits that will be used for
        matching the context ID. The default value is -1, indicating that
        no value is set and that the default will be defined in the
        ofi_types.h file.
    Default: -1

MPIR_CVAR_CH4_OFI_RANK_BITS
    Aliases: MVP_CH4_OFI_RANK_BITS
             MPICH_CH4_OFI_RANK_BITS
    Description: Specifies the number of bits that will be used for
        matching the MPI rank. The default value is -1, indicating that no
        value is set and that the default will be defined in the
        ofi_types.h file.
    Default: -1

MPIR_CVAR_CH4_OFI_TAG_BITS
    Aliases: MVP_CH4_OFI_TAG_BITS
             MPICH_CH4_OFI_TAG_BITS
    Description: Specifies the number of bits that will be used for
        matching the user tag. The default value is -1, indicating that no
        value is set and that the default will be defined in the
        ofi_types.h file.
    Default: -1

MPIR_CVAR_CH4_OFI_MAJOR_VERSION
    Aliases: MVP_CH4_OFI_MAJOR_VERSION
             MPICH_CH4_OFI_MAJOR_VERSION
    Description: Specifies the major version of the OFI library. The
        default is the major version of the OFI library used with MPICH. If
        using this CVAR, it is recommended that the user also specifies a
        specific OFI provider.
    Default: -1

MPIR_CVAR_CH4_OFI_MINOR_VERSION
    Aliases: MVP_CH4_OFI_MINOR_VERSION
             MPICH_CH4_OFI_MINOR_VERSION
    Description: Specifies the major version of the OFI library. The
        default is the minor version of the OFI library used with MPICH. If
        using this CVAR, it is recommended that the user also specifies a
        specific OFI provider.
    Default: -1

MPIR_CVAR_CH4_OFI_MAX_RMA_SEP_CTX
    Aliases: MVP_CH4_OFI_MAX_RMA_SEP_CTX
             MPICH_CH4_OFI_MAX_RMA_SEP_CTX
    Description: If set to positive, this CVAR specifies the maximum number
        of transmit contexts RMA can utilize in a scalable endpoint. This
        value is effective only when scalable endpoint is available,
        otherwise it will be ignored.
    Default: 0

MPIR_CVAR_CH4_OFI_MAX_EAGAIN_RETRY
    Aliases: MVP_CH4_OFI_MAX_EAGAIN_RETRY
             MPICH_CH4_OFI_MAX_EAGAIN_RETRY
    Description: If set to positive, this CVAR specifies the maximum number
        of retries of an ofi operations before returning MPIX_ERR_EAGAIN.
        This value is effective only when the communicator has the
        MPI_OFI_set_eagain info hint set to true.
    Default: -1

MPIR_CVAR_CH4_OFI_NUM_AM_BUFFERS
    Aliases: MVP_CH4_OFI_NUM_AM_BUFFERS
             MPICH_CH4_OFI_NUM_AM_BUFFERS
    Description: Specifies the number of buffers for receiving active
        messages.
    Default: -1

MPIR_CVAR_CH4_OFI_NUM_OPTIMIZED_MEMORY_REGIONS
    Aliases: MVP_CH4_OFI_NUM_OPTIMIZED_MEMORY_REGIONS
             MPICH_CH4_OFI_NUM_OPTIMIZED_MEMORY_REGIONS
    Description: Specifies the number of optimized memory regions supported
        by the provider. An optimized memory region is used for
        lower-overhead, unordered RMA operations. It uses a low-overhead RX
        path and additionally, a low-overhead packet format may be used to
        target an optimized memory region.
    Default: 0

MPIR_CVAR_CH4_OFI_RMA_PROGRESS_INTERVAL
    Aliases: MVP_CH4_OFI_RMA_PROGRESS_INTERVAL
             MPICH_CH4_OFI_RMA_PROGRESS_INTERVAL
    Description: Specifies the interval for manually flushing RMA
        operations when automatic progress is not enabled. It the
        underlying OFI provider supports auto data progress, this value is
        ignored. If the value is -1, this optimization will be turned off.
    Default: 100

MPIR_CVAR_CH4_OFI_RMA_IOVEC_MAX
    Aliases: MVP_CH4_OFI_RMA_IOVEC_MAX
             MPICH_CH4_OFI_RMA_IOVEC_MAX
    Description: Specifies the maximum number of iovecs to allocate for RMA
        operations to/from noncontiguous buffers.
    Default: 16384

MPIR_CVAR_CH4_OFI_EAGER_MAX_MSG_SIZE
    Aliases: MVP_CH4_OFI_EAGER_MAX_MSG_SIZE
             MPICH_CH4_OFI_EAGER_MAX_MSG_SIZE
    Description: This cvar controls the message size at which OFI native
        path switches from eager to rendezvous mode. It does not affect the
        AM path eager limit. Having this gives a way to reliably test
        native non-path. If the number is positive, OFI will init the
        MPIDI_OFI_global.max_msg_size to the value of cvar. If the number
        is negative, OFI will init the MPIDI_OFI_globa.max_msg_size using
        whatever provider gives (which might be unlimited for socket
        provider).
    Default: -1

MPIR_CVAR_CH4_OFI_MAX_NICS
    Aliases: MVP_CH4_OFI_MAX_NICS
             MPICH_CH4_OFI_MAX_NICS
    Description: If set to positive number, this cvar determines the
        maximum number of physical nics to use (if more than one is
        available). If the number is -1, underlying netmod or shmmod
        automatically uses an optimal number depending on what is detected
        on the system up to the limit determined by MPIDI_MAX_NICS (in
        ofi_types.h).
    Default: -1

MPIR_CVAR_CH4_OFI_ENABLE_MULTI_NIC_STRIPING
    Aliases: MVP_CH4_OFI_ENABLE_MULTI_NIC_STRIPING
             MPICH_CH4_OFI_ENABLE_MULTI_NIC_STRIPING
    Description: If true, this cvar enables striping of large messages
        across multiple NICs.
    Default: 0

MPIR_CVAR_CH4_OFI_MULTI_NIC_STRIPING_THRESHOLD
    Aliases: MVP_CH4_OFI_MULTI_NIC_STRIPING_THRESHOLD
             MPICH_CH4_OFI_MULTI_NIC_STRIPING_THRESHOLD
    Description: Striping will happen for message sizes beyond this
        threshold.
    Default: 1048576

MPIR_CVAR_CH4_OFI_ENABLE_MULTI_NIC_HASHING
    Aliases: MVP_CH4_OFI_ENABLE_MULTI_NIC_HASHING
             MPICH_CH4_OFI_ENABLE_MULTI_NIC_HASHING
    Description: Multi-NIC hashing means to use more than one NIC to send
        and receive messages above a certain size.  If set to positive
        number, this feature will be turned on. If set to 0, this feature
        will be turned off. If the number is -1, MPICH automatically
        determines whether to use multi-nic hashing depending on what is
        detected on the system (e.g., number of NICs available, number of
        processes sharing the NICs).
    Default: 0

MPIR_CVAR_CH4_OFI_MULTIRECV_BUFFER_SIZE
    Aliases: MVP_CH4_OFI_MULTIRECV_BUFFER_SIZE
             MPICH_CH4_OFI_MULTIRECV_BUFFER_SIZE
    Description: Controls the multirecv am buffer size. It is recommended
        to match this to the hugepage size so that the buffer can be
        allocated at the page boundary.
    Default: 2097152

MPIR_CVAR_OFI_USE_MIN_NICS
    Aliases: MVP_OFI_USE_MIN_NICS
             MPICH_OFI_USE_MIN_NICS
    Description: If true and all nodes do not have the same number of NICs,
        MPICH will fall back to using the fewest number of NICs instead of
        returning an error.
    Default: 1

MPIR_CVAR_CH4_OFI_ENABLE_TRIGGERED
    Aliases: MVP_CH4_OFI_ENABLE_TRIGGERED
             MPICH_CH4_OFI_ENABLE_TRIGGERED
    Description: If true, enable OFI triggered ops for MPI collectives.
    Default: -1

MPIR_CVAR_CH4_OFI_ENABLE_GPU_PIPELINE
    Aliases: MVP_CH4_OFI_ENABLE_GPU_PIPELINE
             MPICH_CH4_OFI_ENABLE_GPU_PIPELINE
    Description: If true, enable pipeline for GPU data transfer. GPU
        pipeline does not support non-contiguous datatypes or mixed buffer
        types (i.e. GPU send buffer, host recv buffer). If GPU pipeline is
        enabled, the unsupported scenarios will cause undefined behavior if
        encountered.
    Default: 0

MPIR_CVAR_CH4_OFI_GPU_PIPELINE_THRESHOLD
    Aliases: MVP_CH4_OFI_GPU_PIPELINE_THRESHOLD
             MPICH_CH4_OFI_GPU_PIPELINE_THRESHOLD
    Description: This is the threshold to start using GPU pipeline.
    Default: 131072

MPIR_CVAR_CH4_OFI_GPU_PIPELINE_BUFFER_SZ
    Aliases: MVP_CH4_OFI_GPU_PIPELINE_BUFFER_SZ
             MPICH_CH4_OFI_GPU_PIPELINE_BUFFER_SZ
    Description: Specifies the buffer size (in bytes) for GPU pipeline data
        transfer.
    Default: 1048576

MPIR_CVAR_CH4_OFI_GPU_PIPELINE_NUM_BUFFERS_PER_CHUNK
    Aliases: MVP_CH4_OFI_GPU_PIPELINE_NUM_BUFFERS_PER_CHUNK
             MPICH_CH4_OFI_GPU_PIPELINE_NUM_BUFFERS_PER_CHUNK
    Description: Specifies the number of buffers for GPU pipeline data
        transfer in each block/chunk of the pool.
    Default: 32

MPIR_CVAR_CH4_OFI_GPU_PIPELINE_MAX_NUM_BUFFERS
    Aliases: MVP_CH4_OFI_GPU_PIPELINE_MAX_NUM_BUFFERS
             MPICH_CH4_OFI_GPU_PIPELINE_MAX_NUM_BUFFERS
    Description: Specifies the total number of buffers for GPU pipeline
        data transfer
    Default: 32

MPIR_CVAR_CH4_OFI_GPU_PIPELINE_D2H_ENGINE_TYPE
    Aliases: MVP_CH4_OFI_GPU_PIPELINE_D2H_ENGINE_TYPE
             MPICH_CH4_OFI_GPU_PIPELINE_D2H_ENGINE_TYPE
    Description: Specifies the GPU engine type for GPU pipeline on the
        sender side, default is MPL_GPU_ENGINE_TYPE_COMPUTE
    Default: 0

MPIR_CVAR_CH4_OFI_GPU_PIPELINE_H2D_ENGINE_TYPE
    Aliases: MVP_CH4_OFI_GPU_PIPELINE_H2D_ENGINE_TYPE
             MPICH_CH4_OFI_GPU_PIPELINE_H2D_ENGINE_TYPE
    Description: Specifies the GPU engine type for GPU pipeline on the
        receiver side, default is MPL_GPU_ENGINE_TYPE_COMPUTE
    Default: 0

MPIR_CVAR_MALLOC_ENABLE_MMAP
    Aliases: MVP_MALLOC_ENABLE_MMAP
             MPICH_MALLOC_ENABLE_MMAP
    Description: Set to 0 to disable the use of MMAP by the standard memory
        allocator. Doing so provides cache performance improvements for
        most cases. Setting to 1 will return to the system default
        behaviour.
    Default: 0

MPIR_CVAR_MALLOC_HEAP_STEP
    Aliases: MVP_MALLOC_HEAP_STEP
             MPICH_MALLOC_HEAP_STEP
    Description: Sets the size by which the malloc program heap is expanded
        by the memory allocator when new memory is required by the program.
        A higher value will generally provide better cache performance, but
        will result in a higher memory footprint. The program heap exists
        on a per-processes basis. Setting this value to zero will use the
        system default.
    Default: 32 * 1024 * 1024

MPIR_CVAR_CH4_OFI_PREF_NIC
    Aliases: MVP_CH4_OFI_PREF_NIC
             MPICH_CH4_OFI_PREF_NIC
    Description: Accept the NIC value from a user
    Default: -1

MPIR_CVAR_CH4_OFI_DISABLE_INJECT_WRITE
    Aliases: MVP_CH4_OFI_DISABLE_INJECT_WRITE
             MPICH_CH4_OFI_DISABLE_INJECT_WRITE
    Description: Avoid use fi_inject_write. For some provider, e.g.
        tcp;ofi_rxm, inject write may break the synchronization.
    Default: 0

MPIR_CVAR_CH4_OFI_ENABLE_INJECT
    Aliases: MVP_CH4_OFI_ENABLE_INJECT
             MPICH_CH4_OFI_ENABLE_INJECT
    Description: Set MPIR_CVAR_CH4_OFI_ENABLE_INJECT=0 to disable buffered
        send for small messages. This may help avoid hang due to lack of
        global progress.
    Default: 1

MPIR_CVAR_CH4_OFI_GPU_SEND_ENGINE_TYPE
    Aliases: MVP_CH4_OFI_GPU_SEND_ENGINE_TYPE
             MPICH_CH4_OFI_GPU_SEND_ENGINE_TYPE
    Description: Specifies GPU engine type for GPU pt2pt on the sender
        side.
        compute - use a compute engine
        copy_high_bandwidth - use a high-bandwidth copy engine
        copy_low_latency - use a low-latency copy engine
        yaksa - use Yaksa
    Default: MPIR_CVAR_CH4_OFI_GPU_SEND_ENGINE_TYPE_copy_low_latency

MPIR_CVAR_CH4_OFI_EAGER_THRESHOLD
    Aliases: MVP_CH4_OFI_EAGER_THRESHOLD
             MPICH_CH4_OFI_EAGER_THRESHOLD
    Description: Messages below MPIR_CVAR_CH4_OFI_EAGER_THRESHOLD will be
        sent eagerly using fi_tagged interfaces. Messages above the
        threshold will perform an MPICH-level rendezvous handshake before
        sending the data. If set to -1, MPICH will only perform rendezvous
        for messages larger than the provider max_msg_size. Note the MPICH
        eager/rendezvous threshold is independent of any internal libfabric
        provider threshold.
    Default: -1

MPIR_CVAR_UCX_DT_RECV
    Aliases: MVP_UCX_DT_RECV
             MPICH_UCX_DT_RECV
    Description: Variable to select method for receiving noncontiguous data
        true                - Use UCX datatype with pack/unpack callbacks
        false               - MPICH will decide to pack/unpack at
        completion or use IOVs
        based on the datatype
    Default: 0

MPIR_CVAR_CH4_CMA_ENABLE
    Aliases: MVP_CH4_CMA_ENABLE
             MPICH_CH4_CMA_ENABLE
    Description: Set to 1 to manually enable CMA. It is disabled by default
        because the CMA requires the ptrace_scope permission, which is
        often disabled.
    Default: 1

MPIR_CVAR_CH4_IPC_CMA_P2P_THRESHOLD
    Aliases: MVP_CH4_IPC_CMA_P2P_THRESHOLD
             MPICH_CH4_IPC_CMA_P2P_THRESHOLD
    Description: If a send message size is greater than or equal to
        MPIR_CVAR_CH4_IPC_CMA_P2P_THRESHOLD (in bytes), then enable
        CMA-based single copy protocol for intranode communication. The
        environment variable is valid only when the CMA submodule is
        enabled.
    Default: 16384

MPIR_CVAR_CH4_IPC_RNDV_PROTOCOL
    Aliases: MVP_CH4_IPC_RNDV_PROTOCOL
             MPICH_CH4_IPC_RNDV_PROTOCOL
    Description: Variable to select the RNDV protocol.
        auto    - Default RNDV Protocol that enable COOP automatically
        rget    - RNDV RGET Protocol
        rput    - RNDV RPUT Protocol
        coop    - RNDV COOP Protocol
    Default: MPIR_CVAR_CH4_IPC_RNDV_PROTOCOL_rget

MPIR_CVAR_CH4_IPC_CMA_COOP_THRESHOLD
    Aliases: MVP_CH4_IPC_CMA_COOP_THRESHOLD
             MPICH_CH4_IPC_CMA_COOP_THRESHOLD
    Description: If a send message size is greater than or equal to
        MPIR_CVAR_CH4_CMA_COOP_THRESHOLD (in bytes), then enable CMA-based
        COOP rndv protocol for intra-node communication. Messages below
        this  threshold will use either RPUT or RGET protocol as set by 
        MPIR_CVAR_CH4_IPC_RNDV_PROTOCOL.
    Default: 16384

MPIR_CVAR_CH4_IPC_GPU_HANDLE_CACHE
    Aliases: MVP_CH4_IPC_GPU_HANDLE_CACHE
             MPICH_CH4_IPC_GPU_HANDLE_CACHE
    Description: By default, we will cache ipc handles using the
        specialized cache mechanism. If the
        gpu-specific backend does not implement a specialized cache, then
        we will fallback to
        the generic cache mechanism. Users can optionally force the generic
        cache mechanism or
        disable ipc caching entirely.
        generic - use the cache mechanism in the generic layer
        specialized - use the cache mechanism in a gpu-specific mpl layer
        (if applicable)
        disabled - disable caching completely
    Default: MPIR_CVAR_CH4_IPC_GPU_HANDLE_CACHE_specialized

MPIR_CVAR_CH4_IPC_GPU_MAX_CACHE_ENTRIES
    Aliases: MVP_CH4_IPC_GPU_MAX_CACHE_ENTRIES
             MPICH_CH4_IPC_GPU_MAX_CACHE_ENTRIES
    Description: The maximum number of entries to hold per device in the
        cache containing IPC mapped buffers. When an entry is evicted, the
        corresponding IPC handle is closed. This value is relevant only
        when MPIR_CVAR_CH4_IPC_GPU_CACHE_SIZE=limited.
    Default: 16

MPIR_CVAR_CH4_IPC_GPU_CACHE_SIZE
    Aliases: MVP_CH4_IPC_GPU_CACHE_SIZE
             MPICH_CH4_IPC_GPU_CACHE_SIZE
    Description: The behavior of the cache containing IPC mapped buffers.
        unlimited - don't restrict the cache size
        limited - limit the cache size based on
        MPIR_CVAR_CH4_IPC_GPU_MAX_CACHE_ENTRIES
        disabled - don't cache mapped IPC buffers
    Default: MPIR_CVAR_CH4_IPC_GPU_CACHE_SIZE_limited

MPIR_CVAR_CH4_IPC_GPU_P2P_THRESHOLD
    Aliases: MVP_CH4_IPC_GPU_P2P_THRESHOLD
             MPICH_CH4_IPC_GPU_P2P_THRESHOLD
    Description: If a send message size is greater than or equal to
        MPIR_CVAR_CH4_IPC_GPU_P2P_THRESHOLD (in bytes), then enable
        GPU-based single copy protocol for intranode communication. The
        environment variable is valid only when then GPU IPC shmmod is
        enabled.
    Default: 1048576

MPIR_CVAR_CH4_IPC_ZE_SHAREABLE_HANDLE
    Aliases: MVP_CH4_IPC_ZE_SHAREABLE_HANDLE
             MPICH_CH4_IPC_ZE_SHAREABLE_HANDLE
    Description: Variable to select implementation for ZE shareable IPC
        handle
        pidfd - use pidfd_getfd syscall to implement shareable IPC handle
        drmfd - force to use device fd-based shareable IPC handle
    Default: MPIR_CVAR_CH4_IPC_ZE_SHAREABLE_HANDLE_drmfd

MPIR_CVAR_CH4_IPC_GPU_ENGINE_TYPE
    Aliases: MVP_CH4_IPC_GPU_ENGINE_TYPE
             MPICH_CH4_IPC_GPU_ENGINE_TYPE
    Description: By default, select engine type automatically
        auto - select automatically
        compute - use compute engine
        copy_high_bandwidth - use high-bandwidth copy engine
        copy_low_latency - use low-latency copy engine
    Default: MPIR_CVAR_CH4_IPC_GPU_ENGINE_TYPE_auto

MPIR_CVAR_CH4_IPC_GPU_READ_WRITE_PROTOCOL
    Aliases: MVP_CH4_IPC_GPU_READ_WRITE_PROTOCOL
             MPICH_CH4_IPC_GPU_READ_WRITE_PROTOCOL
    Description: By default, use read protocol.
        auto - select automatically
        read - use read protocol
        write - use write protocol if remote device is visible
    Default: MPIR_CVAR_CH4_IPC_GPU_READ_WRITE_PROTOCOL_read

MPIR_CVAR_CH4_IPC_GPU_RMA_ENGINE_TYPE
    Aliases: MVP_CH4_IPC_GPU_RMA_ENGINE_TYPE
             MPICH_CH4_IPC_GPU_RMA_ENGINE_TYPE
    Description: By default, select engine type automatically
        yaksa - don't select, use yaksa
        auto - select automatically
        compute - use compute engine
        copy_high_bandwidth - use high-bandwidth copy engine
        copy_low_latency - use low-latency copy engine
    Default: MPIR_CVAR_CH4_IPC_GPU_RMA_ENGINE_TYPE_auto

MPIR_CVAR_CH4_IPC_MAP_REPEAT_ADDR
    Aliases: MVP_CH4_IPC_MAP_REPEAT_ADDR
             MPICH_CH4_IPC_MAP_REPEAT_ADDR
    Description: If an address is used more than once in the last ten send
        operations, map it for IPC use even if it is below the IPC
        threshold.
    Default: 1

MPIR_CVAR_CH4_XPMEM_ENABLE
    Aliases: MVP_CH4_XPMEM_ENABLE
             MPICH_CH4_XPMEM_ENABLE
    Description: To manually disable XPMEM set to 0. The environment
        variable is valid only when the XPMEM submodule is enabled.
    Default: 1

MPIR_CVAR_CH4_IPC_XPMEM_P2P_THRESHOLD
    Aliases: MVP_CH4_IPC_XPMEM_P2P_THRESHOLD
             MPICH_CH4_IPC_XPMEM_P2P_THRESHOLD
    Description: If a send message size is greater than or equal to
        MPIR_CVAR_CH4_IPC_XPMEM_P2P_THRESHOLD (in bytes), then enable
        XPMEM-based single copy protocol for intranode communication. The
        environment variable is valid only when the XPMEM submodule is
        enabled.
    Default: 1024

MPIR_CVAR_BCAST_POSIX_INTRA_ALGORITHM
    Aliases: MVP_BCAST_POSIX_INTRA_ALGORITHM
             MPICH_BCAST_POSIX_INTRA_ALGORITHM
    Description: Variable to select algorithm for intra-node bcast
        mpir           - Fallback to MPIR collectives
        release_gather - Force shm optimized algo using release, gather
        primitives
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_CH4_POSIX_COLL_SELECTION_TUNING_JSON_FILE)
        ipc_read - Uses read-based collective with ipc
    Default: MPIR_CVAR_BCAST_POSIX_INTRA_ALGORITHM_auto

MPIR_CVAR_IBCAST_POSIX_INTRA_ALGORITHM
    Aliases: MVP_IBCAST_POSIX_INTRA_ALGORITHM
             MPICH_IBCAST_POSIX_INTRA_ALGORITHM
    Description: Variable to select algorithm for intra-node bcast
        mpir           - Fallback to MPIR collectives
        release_gather - Force shm optimized algo using release, gather
        primitives
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_CH4_POSIX_COLL_SELECTION_TUNING_JSON_FILE)
    Default: MPIR_CVAR_IBCAST_POSIX_INTRA_ALGORITHM_auto

MPIR_CVAR_REDUCE_POSIX_INTRA_ALGORITHM
    Aliases: MVP_REDUCE_POSIX_INTRA_ALGORITHM
             MPICH_REDUCE_POSIX_INTRA_ALGORITHM
    Description: Variable to select algorithm for intra-node reduce
        mpir           - Fallback to MPIR collectives
        release_gather - Force shm optimized algo using release, gather
        primitives
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_CH4_POSIX_COLL_SELECTION_TUNING_JSON_FILE)
    Default: MPIR_CVAR_REDUCE_POSIX_INTRA_ALGORITHM_auto

MPIR_CVAR_IREDUCE_POSIX_INTRA_ALGORITHM
    Aliases: MVP_IREDUCE_POSIX_INTRA_ALGORITHM
             MPICH_IREDUCE_POSIX_INTRA_ALGORITHM
    Description: Variable to select algorithm for intra-node reduce
        mpir           - Fallback to MPIR collectives
        release_gather - Force shm optimized algo using release, gather
        primitives
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_CH4_POSIX_COLL_SELECTION_TUNING_JSON_FILE)
    Default: MPIR_CVAR_IREDUCE_POSIX_INTRA_ALGORITHM_auto

MPIR_CVAR_ALLREDUCE_POSIX_INTRA_ALGORITHM
    Aliases: MVP_ALLREDUCE_POSIX_INTRA_ALGORITHM
             MPICH_ALLREDUCE_POSIX_INTRA_ALGORITHM
    Description: Variable to select algorithm for intra-node allreduce
        mpir           - Fallback to MPIR collectives
        release_gather - Force shm optimized algo using release, gather
        primitives
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_CH4_POSIX_COLL_SELECTION_TUNING_JSON_FILE)
    Default: MPIR_CVAR_ALLREDUCE_POSIX_INTRA_ALGORITHM_auto

MPIR_CVAR_BARRIER_POSIX_INTRA_ALGORITHM
    Aliases: MVP_BARRIER_POSIX_INTRA_ALGORITHM
             MPICH_BARRIER_POSIX_INTRA_ALGORITHM
    Description: Variable to select algorithm for intra-node barrier
        mpir           - Fallback to MPIR collectives
        release_gather - Force shm optimized algo using release, gather
        primitives
        auto - Internal algorithm selection (can be overridden with
        MPIR_CVAR_CH4_POSIX_COLL_SELECTION_TUNING_JSON_FILE)
    Default: MPIR_CVAR_BARRIER_POSIX_INTRA_ALGORITHM_auto

MPIR_CVAR_ALLTOALL_POSIX_INTRA_ALGORITHM
    Aliases: MVP_ALLTOALL_POSIX_INTRA_ALGORITHM
             MPICH_ALLTOALL_POSIX_INTRA_ALGORITHM
    Description: Variable to select algorithm for intra-node alltoall
        mpir           - Fallback to MPIR collectives (default)
        ipc_read    - Uses read-based collective with ipc
    Default: MPIR_CVAR_ALLTOALL_POSIX_INTRA_ALGORITHM_mpir

MPIR_CVAR_ALLGATHER_POSIX_INTRA_ALGORITHM
    Aliases: MVP_ALLGATHER_POSIX_INTRA_ALGORITHM
             MPICH_ALLGATHER_POSIX_INTRA_ALGORITHM
    Description: Variable to select algorithm for intra-node allgather
        mpir        - Fallback to MPIR collectives (default)
        ipc_read    - Uses read-based collective with ipc
    Default: MPIR_CVAR_ALLGATHER_POSIX_INTRA_ALGORITHM_mpir

MPIR_CVAR_ALLGATHERV_POSIX_INTRA_ALGORITHM
    Aliases: MVP_ALLGATHERV_POSIX_INTRA_ALGORITHM
             MPICH_ALLGATHERV_POSIX_INTRA_ALGORITHM
    Description: Variable to select algorithm for intra-node allgatherv
        mpir        - Fallback to MPIR collectives (default)
        ipc_read    - Uses read-based collective with ipc
    Default: MPIR_CVAR_ALLGATHERV_POSIX_INTRA_ALGORITHM_mpir

MPIR_CVAR_POSIX_POLL_FREQUENCY
    Aliases: MVP_POSIX_POLL_FREQUENCY
             MPICH_POSIX_POLL_FREQUENCY
    Description: This cvar sets the number of loops before the yield
        function is called.  A value of 0 disables yielding.
    Default: 1000

MPIR_CVAR_BCAST_IPC_READ_MSG_SIZE_THRESHOLD
    Aliases: MVP_BCAST_IPC_READ_MSG_SIZE_THRESHOLD
             MPICH_BCAST_IPC_READ_MSG_SIZE_THRESHOLD
    Description: Use gpu ipc read bcast only when the message size is
        larger than this threshold.
    Default: 256

MPIR_CVAR_ALLTOALL_IPC_READ_MSG_SIZE_THRESHOLD
    Aliases: MVP_ALLTOALL_IPC_READ_MSG_SIZE_THRESHOLD
             MPICH_ALLTOALL_IPC_READ_MSG_SIZE_THRESHOLD
    Description: Use gpu ipc read alltoall only when the message size is
        larger than this threshold.
    Default: 256

MPIR_CVAR_ALLGATHER_IPC_READ_MSG_SIZE_THRESHOLD
    Aliases: MVP_ALLGATHER_IPC_READ_MSG_SIZE_THRESHOLD
             MPICH_ALLGATHER_IPC_READ_MSG_SIZE_THRESHOLD
    Description: Use gpu ipc read allgather only when the message size is
        larger than this threshold.
    Default: 256

MPIR_CVAR_ALLGATHERV_IPC_READ_MSG_SIZE_THRESHOLD
    Aliases: MVP_ALLGATHERV_IPC_READ_MSG_SIZE_THRESHOLD
             MPICH_ALLGATHERV_IPC_READ_MSG_SIZE_THRESHOLD
    Description: Use gpu ipc read allgatherv only when the message size is
        larger than this threshold.
    Default: 256

MPIR_CVAR_POSIX_NUM_COLLS_THRESHOLD
    Aliases: MVP_POSIX_NUM_COLLS_THRESHOLD
             MPICH_POSIX_NUM_COLLS_THRESHOLD
    Description: Use posix optimized collectives (release_gather) only when
        the total number of Bcast, Reduce, Barrier, and Allreduce calls on
        the node level communicator is more than this threshold.
    Default: 5

MPIR_CVAR_CH4_SHM_POSIX_EAGER
    Aliases: MVP_CH4_SHM_POSIX_EAGER
             MPICH_CH4_SHM_POSIX_EAGER
    Description: If non-empty, this cvar specifies which shm posix eager
        module to use
    Default: ""

MPIR_CVAR_CH4_POSIX_COLL_SELECTION_TUNING_JSON_FILE
    Aliases: MVP_CH4_POSIX_COLL_SELECTION_TUNING_JSON_FILE
             MPICH_CH4_POSIX_COLL_SELECTION_TUNING_JSON_FILE
    Description: Defines the location of tuning file.
    Default: ""

MPIR_CVAR_CH4_POSIX_COLL_SELECTION_TUNING_JSON_FILE_GPU
    Aliases: MVP_CH4_POSIX_COLL_SELECTION_TUNING_JSON_FILE_GPU
             MPICH_CH4_POSIX_COLL_SELECTION_TUNING_JSON_FILE_GPU
    Description: Defines the location of tuning file for GPU.
    Default: ""

MPIR_CVAR_CH4_SHM_POSIX_TOPO_ENABLE
    Aliases: MVP_CH4_SHM_POSIX_TOPO_ENABLE
             MPICH_CH4_SHM_POSIX_TOPO_ENABLE
    Description: Controls topology-aware communication in POSIX.
    Default: 0

MPIR_CVAR_CH4_SHM_POSIX_IQUEUE_NUM_CELLS
    Aliases: MVP_CH4_SHM_POSIX_IQUEUE_NUM_CELLS
             MPICH_CH4_SHM_POSIX_IQUEUE_NUM_CELLS
    Description: The number of cells used for the depth of the iqueue.
    Default: 64

MPIR_CVAR_CH4_SHM_POSIX_IQUEUE_CELL_SIZE
    Aliases: MVP_CH4_SHM_POSIX_IQUEUE_CELL_SIZE
             MPICH_CH4_SHM_POSIX_IQUEUE_CELL_SIZE
    Description: Size of each cell.
    Default: 16384

MPIR_CVAR_CH4_MVP_SHM_POSIX_NUM_CELLS
    Aliases: MVP_CH4_MVP_SHM_POSIX_NUM_CELLS
             MPICH_CH4_MVP_SHM_POSIX_NUM_CELLS
    Description: The number of cells used per sender
    Default: 128

MPIR_CVAR_CH4_MVP_SHM_POSIX_CELL_SIZE
    Aliases: MVP_CH4_MVP_SHM_POSIX_CELL_SIZE
             MPICH_CH4_MVP_SHM_POSIX_CELL_SIZE
    Description: Size of each cell.
    Default: 16384

MPIR_CVAR_COLL_SHM_LIMIT_PER_NODE
    Aliases: MVP_COLL_SHM_LIMIT_PER_NODE
             MPICH_COLL_SHM_LIMIT_PER_NODE
    Description: Maximum shared memory created per node for optimized
        intra-node collectives (in KB)
    Default: 65536

MPIR_CVAR_BCAST_INTRANODE_BUFFER_TOTAL_SIZE
    Aliases: MVP_BCAST_INTRANODE_BUFFER_TOTAL_SIZE
             MPICH_BCAST_INTRANODE_BUFFER_TOTAL_SIZE
    Description: Total size of the bcast buffer (in bytes)
    Default: 32768

MPIR_CVAR_BCAST_INTRANODE_NUM_CELLS
    Aliases: MVP_BCAST_INTRANODE_NUM_CELLS
             MPICH_BCAST_INTRANODE_NUM_CELLS
    Description: Number of cells the bcast buffer is divided into
    Default: 4

MPIR_CVAR_REDUCE_INTRANODE_BUFFER_TOTAL_SIZE
    Aliases: MVP_REDUCE_INTRANODE_BUFFER_TOTAL_SIZE
             MPICH_REDUCE_INTRANODE_BUFFER_TOTAL_SIZE
    Description: Total size of the reduce buffer per rank (in bytes)
    Default: 32768

MPIR_CVAR_REDUCE_INTRANODE_NUM_CELLS
    Aliases: MVP_REDUCE_INTRANODE_NUM_CELLS
             MPICH_REDUCE_INTRANODE_NUM_CELLS
    Description: Number of cells the reduce buffer is divided into, for
        each rank
    Default: 4

MPIR_CVAR_BCAST_INTRANODE_TREE_KVAL
    Aliases: MVP_BCAST_INTRANODE_TREE_KVAL
             MPICH_BCAST_INTRANODE_TREE_KVAL
    Description: K value for the kary/knomial tree for intra-node bcast
    Default: 64

MPIR_CVAR_BCAST_INTRANODE_TREE_TYPE
    Aliases: MVP_BCAST_INTRANODE_TREE_TYPE
             MPICH_BCAST_INTRANODE_TREE_TYPE
    Description: Tree type for intra-node bcast tree kary      - kary tree
        type knomial_1 - knomial_1 tree type (ranks are added in order from
        the left side) knomial_2 - knomial_2 tree type (ranks are added in
        order from the right side) knomial_2 is only supported with non
        topology aware trees.
    Default: "kary"

MPIR_CVAR_REDUCE_INTRANODE_MSG_SIZE_THRESHOLD
    Aliases: MVP_REDUCE_INTRANODE_MSG_SIZE_THRESHOLD
             MPICH_REDUCE_INTRANODE_MSG_SIZE_THRESHOLD
    Description: MPIR_CVAR_REDUCE_INTRANODE_TREE_KVAL and
        MPIR_CVAR_REDUCE_INTRANODE_TREE_TYPE are used when the message size
        is smaller than or equal to this threshold;
        MPIR_CVAR_REDUCE_INTRANODE_TREE_KVAL_LARGE and
        MPIR_CVAR_REDUCE_INTRANODE_TREE_TYPE_LARGE are used when the
        message size is larger than this threshold.
    Default: 2048

MPIR_CVAR_REDUCE_INTRANODE_TREE_KVAL
    Aliases: MVP_REDUCE_INTRANODE_TREE_KVAL
             MPICH_REDUCE_INTRANODE_TREE_KVAL
    Description: K value for the kary/knomial tree for intra-node reduce
    Default: 4

MPIR_CVAR_REDUCE_INTRANODE_TREE_KVAL_LARGE
    Aliases: MVP_REDUCE_INTRANODE_TREE_KVAL_LARGE
             MPICH_REDUCE_INTRANODE_TREE_KVAL_LARGE
    Description: K value for the kary/knomial tree for intra-node reduce.
        Used for large messages.
    Default: 2

MPIR_CVAR_REDUCE_INTRANODE_TREE_TYPE
    Aliases: MVP_REDUCE_INTRANODE_TREE_TYPE
             MPICH_REDUCE_INTRANODE_TREE_TYPE
    Description: Tree type for intra-node reduce tree kary      - kary tree
        type knomial_1 - knomial_1 tree type (ranks are added in order from
        the left side) knomial_2 - knomial_2 tree type (ranks are added in
        order from the right side) knomial_2 is only supported with non
        topology aware trees.
    Default: "kary"

MPIR_CVAR_REDUCE_INTRANODE_TREE_TYPE_LARGE
    Aliases: MVP_REDUCE_INTRANODE_TREE_TYPE_LARGE
             MPICH_REDUCE_INTRANODE_TREE_TYPE_LARGE
    Description: Tree type for intra-node reduce tree. Used for large
        messages. kary      - kary tree type knomial_1 - knomial_1 tree
        type (ranks are added in order from the left side) knomial_2 -
        knomial_2 tree type (ranks are added in order from the right side)
        knomial_2 is only supported with non topology aware trees.
    Default: "kary"

MPIR_CVAR_ENABLE_INTRANODE_TOPOLOGY_AWARE_TREES
    Aliases: MVP_ENABLE_INTRANODE_TOPOLOGY_AWARE_TREES
             MPICH_ENABLE_INTRANODE_TOPOLOGY_AWARE_TREES
    Description: Enable collective specific intra-node trees which leverage
        the memory hierarchy of a machine. Depends on hwloc to extract the
        binding information of each rank. Pick a leader rank per package
        (socket), then create a per_package tree for ranks on a same
        package, package leaders tree for package leaders. For Bcast -
        Assemble the per_package and package_leaders tree in such a way
        that leaders interact among themselves first before interacting
        with package local ranks. Both the package_leaders and per_package
        trees are left skewed (children are added from left to right, first
        child to be added is the first one to be processed in traversal)
        For Reduce - Assemble the per_package and package_leaders tree in
        such a way that a leader rank interacts with its package local
        ranks first, then with the other package leaders. Both the
        per_package and package_leaders tree is right skewed (children are
        added in reverse order, first child to be added is the last one to
        be processed in traversal) The tree radix and tree type of
        package_leaders and per_package tree is
        MPIR_CVAR_BCAST{REDUCE}_INTRANODE_TREE_KVAL and
        MPIR_CVAR_BCAST{REDUCE}_INTRANODE_TREE_TYPE respectively for bast
        and reduce. But of as now topology aware trees are only kary and
        knomial_1. knomial_2 is not implemented.
    Default: 1

MPIR_CVAR_BARRIER_COMPOSITION
    Aliases: MVP_BARRIER_COMPOSITION
             MPICH_BARRIER_COMPOSITION
    Description: Select composition (inter_node + intra_node) for Barrier 0
        Auto selection 1 NM + SHM 2 NM only
    Default: 0

MPIR_CVAR_BCAST_COMPOSITION
    Aliases: MVP_BCAST_COMPOSITION
             MPICH_BCAST_COMPOSITION
    Description: Select composition (inter_node + intra_node) for Bcast 0
        Auto selection 1 NM + SHM with explicit send-recv between rank 0
        and root 2 NM + SHM without the explicit send-recv 3 NM only
    Default: 0

MPIR_CVAR_ALLREDUCE_COMPOSITION
    Aliases: MVP_ALLREDUCE_COMPOSITION
             MPICH_ALLREDUCE_COMPOSITION
    Description: Select composition (inter_node + intra_node) for Allreduce
        0 Auto selection 1 NM + SHM with reduce + bcast 2 NM only
        composition 3 SHM only composition 4 Multi leaders based inter node
        + intra node composition
    Default: 0

MPIR_CVAR_ALLGATHER_COMPOSITION
    Aliases: MVP_ALLGATHER_COMPOSITION
             MPICH_ALLGATHER_COMPOSITION
    Description: Select composition (inter_node + intra_node) for Allgather
        0 Auto selection 1 Multi leaders based inter node + intra node
        composition 2 NM only composition
    Default: 0

MPIR_CVAR_ALLTOALL_COMPOSITION
    Aliases: MVP_ALLTOALL_COMPOSITION
             MPICH_ALLTOALL_COMPOSITION
    Description: Select composition (inter_node + intra_node) for Alltoall
        0 Auto selection 1 Multi leaders based inter node + intra node
        composition 2 NM only composition
    Default: 0

MPIR_CVAR_REDUCE_COMPOSITION
    Aliases: MVP_REDUCE_COMPOSITION
             MPICH_REDUCE_COMPOSITION
    Description: Select composition (inter_node + intra_node) for Reduce 0
        Auto selection 1 NM + SHM with explicit send-recv between rank 0
        and root 2 NM + SHM without the explicit send-recv 3 NM only
    Default: 0

MPIR_CVAR_ALLTOALL_SHM_PER_RANK
    Aliases: MVP_ALLTOALL_SHM_PER_RANK
             MPICH_ALLTOALL_SHM_PER_RANK
    Description: Shared memory region per rank for multi-leaders based
        composition for MPI_Alltoall (in bytes)
    Default: 4096

MPIR_CVAR_ALLGATHER_SHM_PER_RANK
    Aliases: MVP_ALLGATHER_SHM_PER_RANK
             MPICH_ALLGATHER_SHM_PER_RANK
    Description: Shared memory region per rank for multi-leaders based
        composition for MPI_Allgather (in bytes)
    Default: 4096

MPIR_CVAR_NUM_MULTI_LEADS
    Aliases: MVP_NUM_MULTI_LEADS
             MPICH_NUM_MULTI_LEADS
    Description: Number of leader ranks per node to be used for
        multi-leaders based collective algorithms
    Default: 4

MPIR_CVAR_ALLREDUCE_SHM_PER_LEADER
    Aliases: MVP_ALLREDUCE_SHM_PER_LEADER
             MPICH_ALLREDUCE_SHM_PER_LEADER
    Description: Shared memory region per node-leader for multi-leaders
        based composition for MPI_Allreduce (in bytes) If it is undefined
        by the user, it is set to the message size of the first call to the
        algorithm. Max shared memory size is limited to 4MB.
    Default: -1

MPIR_CVAR_ALLREDUCE_CACHE_PER_LEADER
    Aliases: MVP_ALLREDUCE_CACHE_PER_LEADER
             MPICH_ALLREDUCE_CACHE_PER_LEADER
    Description: Amount of data reduced in allreduce delta composition's
        reduce local step (in bytes). Smaller msg size per leader avoids
        cache misses and improves performance. Experiments indicate 512 to
        be the best value.
    Default: 512

MPIR_CVAR_ALLREDUCE_LOCAL_COPY_OFFSETS
    Aliases: MVP_ALLREDUCE_LOCAL_COPY_OFFSETS
             MPICH_ALLREDUCE_LOCAL_COPY_OFFSETS
    Description: number of offsets in the allreduce delta composition's
        local copy The value of 2 performed the best in our 2 NIC test
        cases.
    Default: 2

MPIR_CVAR_CH4_NETMOD
    Aliases: MVP_CH4_NETMOD
             MPICH_CH4_NETMOD
    Description: If non-empty, this cvar specifies which network module to
        use
    Default: ""

MPIR_CVAR_CH4_SHM
    Aliases: MVP_CH4_SHM
             MPICH_CH4_SHM
    Description: If non-empty, this cvar specifies which shm module to use
    Default: ""

MPIR_CVAR_CH4_ROOTS_ONLY_PMI
    Aliases: MVP_CH4_ROOTS_ONLY_PMI
             MPICH_CH4_ROOTS_ONLY_PMI
    Description: Enables an optimized business card exchange over PMI for
        node root processes only.
    Default: 1

MPIR_CVAR_CH4_RUNTIME_CONF_DEBUG
    Aliases: MVP_CH4_RUNTIME_CONF_DEBUG
             MPICH_CH4_RUNTIME_CONF_DEBUG
    Description: If enabled, CH4-level runtime configurations are printed
        out
    Default: 0

MPIR_CVAR_CH4_MT_MODEL
    Aliases: MVP_CH4_MT_MODEL
             MPICH_CH4_MT_MODEL
    Description: Specifies the CH4 multi-threading model. Possible values
        are: direct (default) lockless
    Default: ""

MPIR_CVAR_CH4_NUM_VCIS
    Aliases: MVP_CH4_NUM_VCIS
             MPICH_CH4_NUM_VCIS
    Description: Sets the number of VCIs to be implicitly used (should be a
        subset of MPIDI_CH4_MAX_VCIS).
    Default: 1

MPIR_CVAR_CH4_RESERVE_VCIS
    Aliases: MVP_CH4_RESERVE_VCIS
             MPICH_CH4_RESERVE_VCIS
    Description: Sets the number of VCIs that user can explicitly allocate
        (should be a subset of MPIDI_CH4_MAX_VCIS).
    Default: 0

MPIR_CVAR_CH4_COLL_SELECTION_TUNING_JSON_FILE
    Aliases: MVP_CH4_COLL_SELECTION_TUNING_JSON_FILE
             MPICH_CH4_COLL_SELECTION_TUNING_JSON_FILE
    Description: Defines the location of tuning file.
    Default: ""

MPIR_CVAR_CH4_COLL_SELECTION_TUNING_JSON_FILE_GPU
    Aliases: MVP_CH4_COLL_SELECTION_TUNING_JSON_FILE_GPU
             MPICH_CH4_COLL_SELECTION_TUNING_JSON_FILE_GPU
    Description: Defines the location of tuning file for GPU.
    Default: ""

MPIR_CVAR_CH4_IOV_DENSITY_MIN
    Aliases: MVP_CH4_IOV_DENSITY_MIN
             MPICH_CH4_IOV_DENSITY_MIN
    Description: Defines the threshold of high-density datatype. The
        density is calculated by (datatype_size /
        datatype_num_contig_blocks).
    Default: 16384

MPIR_CVAR_CH4_PACK_BUFFER_SIZE
    Aliases: MVP_CH4_PACK_BUFFER_SIZE
             MPICH_CH4_PACK_BUFFER_SIZE
    Description: Specifies the number of buffers for packing/unpacking
        active messages in each block of the pool. The size here should be
        greater or equal to the max of the eager buffer limit of SHM and
        NETMOD.
    Default: 16384

MPIR_CVAR_CH4_NUM_PACK_BUFFERS_PER_CHUNK
    Aliases: MVP_CH4_NUM_PACK_BUFFERS_PER_CHUNK
             MPICH_CH4_NUM_PACK_BUFFERS_PER_CHUNK
    Description: Specifies the number of buffers for packing/unpacking
        active messages in each block of the pool.
    Default: 64

MPIR_CVAR_CH4_MAX_NUM_PACK_BUFFERS
    Aliases: MVP_CH4_MAX_NUM_PACK_BUFFERS
             MPICH_CH4_MAX_NUM_PACK_BUFFERS
    Description: Specifies the max number of buffers for packing/unpacking
        buffers in the pool. Use 0 for unlimited.
    Default: 0

MPIR_CVAR_CH4_GPU_COLL_SWAP_BUFFER_SZ
    Aliases: MVP_CH4_GPU_COLL_SWAP_BUFFER_SZ
             MPICH_CH4_GPU_COLL_SWAP_BUFFER_SZ
    Description: Specifies the buffer size (in bytes) for GPU collectives
        data transfer.
    Default: 1048576

MPIR_CVAR_CH4_GPU_COLL_NUM_BUFFERS_PER_CHUNK
    Aliases: MVP_CH4_GPU_COLL_NUM_BUFFERS_PER_CHUNK
             MPICH_CH4_GPU_COLL_NUM_BUFFERS_PER_CHUNK
    Description: Specifies the number of buffers for GPU collectives data
        transfer in each block/chunk of the pool.
    Default: 1

MPIR_CVAR_CH4_GPU_COLL_MAX_NUM_BUFFERS
    Aliases: MVP_CH4_GPU_COLL_MAX_NUM_BUFFERS
             MPICH_CH4_GPU_COLL_MAX_NUM_BUFFERS
    Description: Specifies the total number of buffers for GPU collectives
        data transfer.
    Default: 256

MPIR_CVAR_CH4_GLOBAL_PROGRESS
    Aliases: MVP_CH4_GLOBAL_PROGRESS
             MPICH_CH4_GLOBAL_PROGRESS
    Description: If on, poll global progress every once a while. With
        per-vci configuration, turning global progress off may improve the
        threading performance.
    Default: 1

MPIR_CVAR_CH4_COMM_CONNECT_TIMEOUT
    Aliases: MVP_CH4_COMM_CONNECT_TIMEOUT
             MPICH_CH4_COMM_CONNECT_TIMEOUT
    Description: The default time out period in seconds for a connection
        attempt to the server communicator where the named port exists but
        no pending accept. User can change the value for a specified
        connection through its info argument.
    Default: 180

MPIR_CVAR_CH4_ENABLE_STREAM_WORKQ
    Aliases: MVP_CH4_ENABLE_STREAM_WORKQ
             MPICH_CH4_ENABLE_STREAM_WORKQ
    Description: Enable stream enqueue operations via stream work queue.
        Requires progress thread on the corresponding MPIX stream.
        Reference: MPIX_Stream_progress and MPIX_Start_progress_thread.
    Default: 0

MPIR_CVAR_CH4_RMA_MEM_EFFICIENT
    Aliases: MVP_CH4_RMA_MEM_EFFICIENT
             MPICH_CH4_RMA_MEM_EFFICIENT
    Description: If true, memory-saving mode is on, per-target object is
        released at the epoch end call. If false, performance-efficient
        mode is on, all allocated target objects are cached and freed at
        win_finalize.
    Default: 0

MPIR_CVAR_CH4_RMA_ENABLE_DYNAMIC_AM_PROGRESS
    Aliases: MVP_CH4_RMA_ENABLE_DYNAMIC_AM_PROGRESS
             MPICH_CH4_RMA_ENABLE_DYNAMIC_AM_PROGRESS
    Description: If true, allows RMA synchronization calls to dynamically
        reduce the frequency of internal progress polling for incoming RMA
        active messages received on the target process. The RMA
        synchronization call initially polls progress with a low frequency
        (defined by MPIR_CVAR_CH4_RMA_AM_PROGRESS_LOW_FREQ_INTERVAL) to
        reduce synchronization overhead. Once any RMA active message has
        been received, it will always poll progress once at every
        synchronization call to ensure prompt target-side progress.
        Effective only for passive target synchronization
        MPI_Win_flush{_all} and MPI_Win_flush_local{_all}.
    Default: 0

MPIR_CVAR_CH4_RMA_AM_PROGRESS_INTERVAL
    Aliases: MVP_CH4_RMA_AM_PROGRESS_INTERVAL
             MPICH_CH4_RMA_AM_PROGRESS_INTERVAL
    Description: Specifies a static interval of progress polling for
        incoming RMA active messages received on the target process.
        Effective only for passive-target synchronization
        MPI_Win_flush{_all} and MPI_Win_flush_local{_all}. Interval
        indicates the number of performed flush calls before polling. It is
        counted globally across all windows. Invalid when
        MPIR_CVAR_CH4_RMA_ENABLE_DYNAMIC_AM_PROGRESS is true.
    Default: 1

MPIR_CVAR_CH4_RMA_AM_PROGRESS_LOW_FREQ_INTERVAL
    Aliases: MVP_CH4_RMA_AM_PROGRESS_LOW_FREQ_INTERVAL
             MPICH_CH4_RMA_AM_PROGRESS_LOW_FREQ_INTERVAL
    Description: Specifies the interval of progress polling with low
        frequency for incoming RMA active message received on the target
        process. Effective only for passive-target synchronization
        MPI_Win_flush{_all} and MPI_Win_flush_local{_all}. Interval
        indicates the number of performed flush calls before polling. It is
        counted globally across all windows. Used when
        MPIR_CVAR_CH4_RMA_ENABLE_DYNAMIC_AM_PROGRESS is true.
    Default: 100

MPIR_CVAR_PT2PT_JSON_TUNING_FILE
    Aliases: MVP_PT2PT_JSON_TUNING_FILE
             MPICH_PT2PT_JSON_TUNING_FILE
    Description: If non-empty, this cvar specifies a file for
        architecture-specific tuning
    Default: ""

MPIR_CVAR_GENQ_SHMEM_POOL_FREE_QUEUE_SENDER_SIDE
    Aliases: MVP_GENQ_SHMEM_POOL_FREE_QUEUE_SENDER_SIDE
             MPICH_GENQ_SHMEM_POOL_FREE_QUEUE_SENDER_SIDE
    Description: The genq shmem code allocates pools of cells on each
        process and, when needed, a cell is removed from the pool and
        passed to another process. This can happen by either removing a
        cell from the pool of the sending process or from the pool of the
        receiving process. This CVAR determines which pool to use. If true,
        the cell will come from the sender-side. If false, the cell will
        com from the receiver-side. There are specific advantages of using
        receiver-side cells when combined with the "avx" fast configure
        option, which allows MPICH to use AVX streaming copy
        intrintrinsics, when available, to avoid polluting the cache of the
        sender with the data being copied to the receiver. Using
        receiver-side cells does have the trade-off of requiring an MPMC
        lock for the free queue rather than an MPSC lock, which is used for
        sender-side cells. Initial performance analysis shows that using
        the MPMC lock in this case had no significant performance loss. By
        default, the queue will continue to use sender-side queues until
        the performance impact is verified.
    Default: 1

MPIR_CVAR_ENABLE_HCOLL
    Aliases: MVP_ENABLE_HCOLL
             MPICH_ENABLE_HCOLL
    Description: Enable hcoll collective support.
    Default: 0

MPIR_CVAR_COLL_SCHED_DUMP
    Aliases: MVP_COLL_SCHED_DUMP
             MPICH_COLL_SCHED_DUMP
    Description: Print schedule data for nonblocking collective operations.
    Default: 0

MPIR_CVAR_SHM_RANDOM_ADDR_RETRY
    Aliases: MVP_SHM_RANDOM_ADDR_RETRY
             MPICH_SHM_RANDOM_ADDR_RETRY
    Description: The default number of retries for generating a random
        address. A retrying involves only local operations.
    Default: 100

MPIR_CVAR_SHM_SYMHEAP_RETRY
    Aliases: MVP_SHM_SYMHEAP_RETRY
             MPICH_SHM_SYMHEAP_RETRY
    Description: The default number of retries for allocating a symmetric
        heap in shared memory. A retrying involves collective communication
        over the group in the shared memory.
    Default: 100

MPIR_CVAR_ENABLE_HEAVY_YIELD
    Aliases: MVP_ENABLE_HEAVY_YIELD
             MPICH_ENABLE_HEAVY_YIELD
    Description: If enabled, use nanosleep to ensure other threads have a
        chance to grab the lock. Note: this may not work with some thread
        runtimes, e.g. non-preemptive user-level threads.
    Default: 0

